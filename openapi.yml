openapi: 3.0.1
info:
  title: HTTP API Console
  description: ""
  version: 0.2.0
servers:
- url: http://rpc1.testnet1.source.network:1317/
tags:
- name: ACP
  description: Access Control Policy (ACP) message types
- name: Bulletin
  description: Bulletin module message types
paths:
  /sourcehub.acp.Msg/CheckAccess:
    post:
      tags:
      - ACP
      summary: CheckAccess executes an Access Request for an User
      description: |-
        The resulting evaluation is stored in SourceHub. It's used to generate a cryptographic proof that the given Access Request
        was valid at a particular block height.
      operationId: SourcehubAcpMsg_CheckAccess
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                creator:
                  type: string
                policy_id:
                  type: string
                creation_time:
                  type: string
                  format: date-time
                access_request:
                  title: AccessRequest represents the wish to perform a set of operations
                    by an actor
                  type: object
                  properties:
                    operations:
                      type: array
                      items:
                        type: object
                        properties:
                          object:
                            title: target object for operation
                            type: object
                            properties:
                              resource:
                                type: string
                              id:
                                type: string
                            description: Object represents an entity which must be
                              access controlled within a Policy.
                          permission:
                            title: permission required to perform operation
                            type: string
                        description: Operation represents an action over an object.
                    actor:
                      title: actor requesting operations
                      type: object
                      properties:
                        id:
                          type: string
                      description: Actor represents an entity which makes access requests
                        to a Policy.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  decision:
                    title: AccessDecision models the result of evaluating a set of
                      AccessRequests for an Actor
                    type: object
                    properties:
                      id:
                        type: string
                      policy_id:
                        title: used as part of id generation
                        type: string
                      creator:
                        title: used as part of id generation
                        type: string
                      creator_acc_sequence:
                        title: used as part of id generation
                        type: string
                        format: uint64
                      operations:
                        title: used as part of id generation
                        type: array
                        items:
                          type: object
                          properties:
                            object:
                              title: target object for operation
                              type: object
                              properties:
                                resource:
                                  type: string
                                id:
                                  type: string
                              description: Object represents an entity which must
                                be access controlled within a Policy.
                            permission:
                              title: permission required to perform operation
                              type: string
                          description: Operation represents an action over an object.
                      actor_did:
                        title: used as part of id generation
                        type: string
                      actor:
                        title: used as part of id generation
                        type: string
                      params:
                        title: used as part of id generation
                        type: object
                        properties:
                          decision_expiration_delta:
                            title: number of blocks a Decision is valid for
                            type: string
                            format: uint64
                          proof_expiration_delta:
                            title: number of blocks a DecisionProof is valid for
                            type: string
                            format: uint64
                          ticket_expiration_delta:
                            title: number of blocks an AccessTicket is valid for
                            type: string
                            format: uint64
                      creation_time:
                        type: string
                        format: date-time
                      issued_height:
                        title: issued_height stores the block height when the Decision
                          was evaluated
                        type: string
                        format: uint64
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-codegen-request-body-name: body
  /sourcehub.acp.Msg/CreatePolicy:
    post:
      tags:
      - ACP
      summary: |-
        CreatePolicy adds a new Policy.
      description: |-
        The Policy models an aplication's high level access control rules.
      operationId: SourcehubAcpMsg_CreatePolicy
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                creator:
                  type: string
                policy:
                  type: string
                marshal_type:
                  type: string
                  description: |-
                    PolicyEncodingType enumerates supported marshaling types for policies.

                     - UNKNOWN: Fallback value for a missing Marshaling Type
                     - SHORT_YAML: Policy Marshaled as a YAML Short Policy definition
                     - SHORT_JSON: Policy Marshaled as a JSON Short Policy definition
                  default: UNKNOWN
                  enum:
                  - UNKNOWN
                  - SHORT_YAML
                  - SHORT_JSON
                creation_time:
                  type: string
                  format: date-time
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  policy:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      creation_time:
                        type: string
                        format: date-time
                      attributes:
                        type: object
                        additionalProperties:
                          type: string
                      resources:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            doc:
                              type: string
                            permissions:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  doc:
                                    type: string
                                  expression:
                                    type: string
                                description: |-
                                  Permission models a special type of Relation which is evaluated at runtime.
                                  A permission often maps to an operation defined for a resource which an actor may attempt.
                            relations:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  doc:
                                    type: string
                                  manages:
                                    title: list of relations managed by the current
                                      relation
                                    type: array
                                    items:
                                      type: string
                                  vr_types:
                                    title: value restriction types
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        resource_name:
                                          title: resource_name scopes permissible
                                            actors resource
                                          type: string
                                        relation_name:
                                          title: relation_name scopes permissible
                                            actors relation
                                          type: string
                                      description: |-
                                        Restriction models a specification which a Relationship's actor
                                        should meet.
                          description: |-
                            Resource models a namespace for objects in a Policy.
                            Appications will have multiple entities which they must manage such as files or groups.
                            A Resource represents a set of entities of a certain type.
                      actor_resource:
                        type: object
                        properties:
                          name:
                            type: string
                          doc:
                            type: string
                          relations:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                doc:
                                  type: string
                                manages:
                                  title: list of relations managed by the current
                                    relation
                                  type: array
                                  items:
                                    type: string
                                vr_types:
                                  title: value restriction types
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      resource_name:
                                        title: resource_name scopes permissible actors
                                          resource
                                        type: string
                                      relation_name:
                                        title: relation_name scopes permissible actors
                                          relation
                                        type: string
                                    description: |-
                                      Restriction models a specification which a Relationship's actor
                                      should meet.
                        description: ActorResource represents a special Resource which
                          is reserved for Policy actors.
                      creator:
                        type: string
                    description: |-
                      Policy represents an ACP module Policy definition.
                      Each Policy defines a set of high level rules over how the acces control system
                      should behave.
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-codegen-request-body-name: body
  /sourcehub.acp.Msg/DeleteRelationship:
    post:
      tags:
      - ACP
      summary: |-
        DelereRelationship removes a Relationship from a Policy.
      description: |-
         If the Relationship was not found in a Policy, this Msg is a no-op.
      operationId: SourcehubAcpMsg_DeleteRelationship
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                creator:
                  type: string
                policy_id:
                  type: string
                relationship:
                  type: object
                  properties:
                    object:
                      type: object
                      properties:
                        resource:
                          type: string
                        id:
                          type: string
                      description: Object represents an entity which must be access
                        controlled within a Policy.
                    relation:
                      type: string
                    subject:
                      type: object
                      properties:
                        actor:
                          type: object
                          properties:
                            id:
                              type: string
                          description: Actor represents an entity which makes access
                            requests to a Policy.
                        actor_set:
                          type: object
                          properties:
                            object:
                              type: object
                              properties:
                                resource:
                                  type: string
                                id:
                                  type: string
                              description: Object represents an entity which must
                                be access controlled within a Policy.
                            relation:
                              type: string
                          description: |-
                            ActorSet represents a set of Actors in a Policy.
                            It is specified through an Object, Relation pair, which represents
                            all actors which have a relationship with given obj-rel pair.
                            This expansion is recursive.
                        all_actors:
                          type: object
                          properties: {}
                          description: |-
                            AllActors models a special Relationship Subject which indicates
                            that all Actors in the Policy are included.
                        object:
                          type: object
                          properties:
                            resource:
                              type: string
                            id:
                              type: string
                          description: Object represents an entity which must be access
                            controlled within a Policy.
                      description: Subject specifies the target of a Relationship.
                  description: |-
                    Relationship models an access control rule.
                    It states that the given subject has relation with object.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  record_found:
                    type: boolean
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-codegen-request-body-name: body
  /sourcehub.acp.Msg/RegisterObject:
    post:
      tags:
      - ACP
      summary: RegisterObject creates a Relationship within a Policy.
      description: |-
        The Owner has complete control over the set of subjects that are related
        to their Object,

        giving them autonomy to share the object and revoke acces to the object,

        much like owners in a Discretionary Access Control model.

        Attempting to register a previously registered Object is an error,
        Object IDs are therefore assumed to be unique within a Policy.
      operationId: SourcehubAcpMsg_RegisterObject
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                creator:
                  type: string
                policy_id:
                  type: string
                object:
                  type: object
                  properties:
                    resource:
                      type: string
                    id:
                      type: string
                  description: Object represents an entity which must be access controlled
                    within a Policy.
                creation_time:
                  type: string
                  format: date-time
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  result:
                    title: RegistrationResult encodes the possible result set from
                      Registering an Object
                    type: string
                    description: |-
                      - NoOp: NoOp indicates no action was take. The operation failed or the Object already existed and was active
                       - Registered: Registered indicates the Object was sucessfuly registered to the Actor.
                       - Unarchived: Unarchived indicates that a previously deleted Object is active again.
                      Only the original owners can Unarchive an object.
                    default: NoOp
                    enum:
                    - NoOp
                    - Registered
                    - Unarchived
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-codegen-request-body-name: body
  /sourcehub.acp.Msg/SetRelationship:
    post:
      tags:
      - ACP
      summary: SetRelationship creates or updates a Relationship within a Policy.
      description: |-
        A Relationship is a statement which ties together an object and a
        subjecto with a "relation",

        which means the set of high level rules defined in the Policy will apply
        to these entities.
      operationId: SourcehubAcpMsg_SetRelationship
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                creator:
                  type: string
                policy_id:
                  type: string
                creation_time:
                  type: string
                  format: date-time
                relationship:
                  type: object
                  properties:
                    object:
                      type: object
                      properties:
                        resource:
                          type: string
                        id:
                          type: string
                      description: Object represents an entity which must be access
                        controlled within a Policy.
                    relation:
                      type: string
                    subject:
                      type: object
                      properties:
                        actor:
                          type: object
                          properties:
                            id:
                              type: string
                          description: Actor represents an entity which makes access
                            requests to a Policy.
                        actor_set:
                          type: object
                          properties:
                            object:
                              type: object
                              properties:
                                resource:
                                  type: string
                                id:
                                  type: string
                              description: Object represents an entity which must
                                be access controlled within a Policy.
                            relation:
                              type: string
                          description: |-
                            ActorSet represents a set of Actors in a Policy.
                            It is specified through an Object, Relation pair, which represents
                            all actors which have a relationship with given obj-rel pair.
                            This expansion is recursive.
                        all_actors:
                          type: object
                          properties: {}
                          description: |-
                            AllActors models a special Relationship Subject which indicates
                            that all Actors in the Policy are included.
                        object:
                          type: object
                          properties:
                            resource:
                              type: string
                            id:
                              type: string
                          description: Object represents an entity which must be access
                            controlled within a Policy.
                      description: Subject specifies the target of a Relationship.
                  description: |-
                    Relationship models an access control rule.
                    It states that the given subject has relation with object.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  record_existed:
                    title: "Indicates whether the given Relationship previously existed,\
                      \ ie the Tx was a no op"
                    type: boolean
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-codegen-request-body-name: body
  /sourcehub.acp.Msg/UnregisterObject:
    post:
      tags:
      - ACP
      summary: UnregisterObject "unshare" a Object.
      description: |-
        A caveat is that after removing the Relationships, a record of the original Object owner
        is maintained to prevent an "ownership hijack" attack.

        Suppose Bob owns object Foo, which is shared with Bob but not Eve.
        Eve wants to access Foo but was not given permission to, they could "hijack" Bob's object by waiting for Bob to Unregister Foo,
        then submitting a RegisterObject Msg, effectively becoming Foo's new owner.
        If Charlie has a copy of the object, Eve could convince Charlie to share his copy, granting Eve access to Foo.
        The previous scenario where an unauthorized user is able to claim ownership to data previously unaccessible to them
        is an "ownership hijack".
      operationId: SourcehubAcpMsg_UnregisterObject
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                creator:
                  type: string
                policy_id:
                  type: string
                object:
                  type: object
                  properties:
                    resource:
                      type: string
                    id:
                      type: string
                  description: Object represents an entity which must be access controlled
                    within a Policy.
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  found:
                    type: boolean
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-codegen-request-body-name: body
  /sourcehub.bulletin.Msg/CreatePost:
    post:
      tags:
      - Bulletin
      summary: Post to the Bulletin
      operationId: SourcehubBulletinMsg_CreatePost
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                creator:
                  type: string
                namespace:
                  type: string
                payload:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
                proof:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            '*/*':
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            '*/*':
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      additionalProperties:
                        type: object
      x-codegen-request-body-name: body
components:
  schemas:
    cosmos.auth.v1beta1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties:
            max_memo_characters:
              type: string
              format: uint64
            tx_sig_limit:
              type: string
              format: uint64
            tx_size_cost_per_byte:
              type: string
              format: uint64
            sig_verify_cost_ed25519:
              type: string
              format: uint64
            sig_verify_cost_secp256k1:
              type: string
              format: uint64
          description: |-
            params defines the x/auth parameters to update.

            NOTE: All parameters must be supplied.
      description: |-
        MsgUpdateParams is the Msg/UpdateParams request type.

        Since: cosmos-sdk 0.47
    cosmos.auth.v1beta1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.

        Since: cosmos-sdk 0.47
    cosmos.auth.v1beta1.Params:
      type: object
      properties:
        max_memo_characters:
          type: string
          format: uint64
        tx_sig_limit:
          type: string
          format: uint64
        tx_size_cost_per_byte:
          type: string
          format: uint64
        sig_verify_cost_ed25519:
          type: string
          format: uint64
        sig_verify_cost_secp256k1:
          type: string
          format: uint64
      description: Params defines the parameters for the auth module.
    google.protobuf.Any:
      type: object
      properties:
        '@type':
          type: string
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
      additionalProperties:
        type: object
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }
            // or ...
            if (any.isSameTypeAs(Foo.getDefaultInstance())) {
              foo = any.unpack(Foo.getDefaultInstance());
            }

        Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

        Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".

        JSON

        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    google.rpc.Status:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
    cosmos.authz.v1beta1.Grant:
      type: object
      properties:
        authorization:
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        expiration:
          title: |-
            time when the grant will expire and will be pruned. If null, then the grant
            doesn't have a time expiration (other conditions  in `authorization`
            may apply to invalidate the grant)
          type: string
          format: date-time
      description: |-
        Grant gives permissions to execute
        the provide method with expiration time.
    cosmos.authz.v1beta1.MsgExec:
      type: object
      properties:
        grantee:
          type: string
        msgs:
          type: array
          description: |-
            Execute Msg.
            The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg))
            triple and validate it.
          items:
            type: object
            additionalProperties:
              type: object
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
      description: |-
        MsgExec attempts to execute the provided messages using
        authorizations granted to the grantee. Each message should have only
        one signer corresponding to the granter of the authorization.
    cosmos.authz.v1beta1.MsgExecResponse:
      type: object
      properties:
        results:
          type: array
          items:
            pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
            type: string
            format: byte
      description: MsgExecResponse defines the Msg/MsgExecResponse response type.
    cosmos.authz.v1beta1.MsgGrant:
      type: object
      properties:
        granter:
          type: string
        grantee:
          type: string
        grant:
          type: object
          properties:
            authorization:
              type: object
              additionalProperties:
                type: object
              description: |-
                `Any` contains an arbitrary serialized protocol buffer message along with a
                URL that describes the type of the serialized message.

                Protobuf library provides support to pack/unpack Any values in the form
                of utility functions or additional generated methods of the Any type.

                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }
                    // or ...
                    if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                      foo = any.unpack(Foo.getDefaultInstance());
                    }

                Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := anypb.New(foo)
                     if err != nil {
                       ...
                     }
                     ...
                     foo := &pb.Foo{}
                     if err := any.UnmarshalTo(foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default use
                'type.googleapis.com/full.type.name' as the type URL and the unpack
                methods only use the fully qualified type name after the last '/'
                in the type URL, for example "foo.bar.com/x/y.z" will yield type
                name "y.z".

                JSON

                The JSON representation of an `Any` value uses the regular
                representation of the deserialized, embedded message, with an
                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON
                representation, that representation will be embedded adding a field
                `value` which holds the custom JSON in addition to the `@type`
                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            expiration:
              title: |-
                time when the grant will expire and will be pruned. If null, then the grant
                doesn't have a time expiration (other conditions  in `authorization`
                may apply to invalidate the grant)
              type: string
              format: date-time
          description: |-
            Grant gives permissions to execute
            the provide method with expiration time.
      description: |-
        MsgGrant is a request type for Grant method. It declares authorization to the grantee
        on behalf of the granter with the provided expiration time.
    cosmos.authz.v1beta1.MsgGrantResponse:
      type: object
      description: MsgGrantResponse defines the Msg/MsgGrant response type.
    cosmos.authz.v1beta1.MsgRevoke:
      type: object
      properties:
        granter:
          type: string
        grantee:
          type: string
        msg_type_url:
          type: string
      description: |-
        MsgRevoke revokes any authorization with the provided sdk.Msg type on the
        granter's account with that has been granted to the grantee.
    cosmos.authz.v1beta1.MsgRevokeResponse:
      type: object
      description: MsgRevokeResponse defines the Msg/MsgRevokeResponse response type.
    cosmos.bank.v1beta1.Input:
      type: object
      properties:
        address:
          type: string
        coins:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: Input models transaction input.
    cosmos.bank.v1beta1.MsgMultiSend:
      type: object
      properties:
        inputs:
          type: array
          description: |-
            Inputs, despite being `repeated`, only allows one sender input. This is
            checked in MsgMultiSend's ValidateBasic.
          items:
            type: object
            properties:
              address:
                type: string
              coins:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
            description: Input models transaction input.
        outputs:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              coins:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: |-
                    Coin defines a token with a denomination and an amount.

                    NOTE: The amount field is an Int which implements the custom method
                    signatures required by gogoproto.
            description: Output models transaction outputs.
      description: "MsgMultiSend represents an arbitrary multi-in, multi-out send\
        \ message."
    cosmos.bank.v1beta1.MsgMultiSendResponse:
      type: object
      description: MsgMultiSendResponse defines the Msg/MultiSend response type.
    cosmos.bank.v1beta1.MsgSend:
      type: object
      properties:
        from_address:
          type: string
        to_address:
          type: string
        amount:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: MsgSend represents a message to send coins from one account to
        another.
    cosmos.bank.v1beta1.MsgSendResponse:
      type: object
      description: MsgSendResponse defines the Msg/Send response type.
    cosmos.bank.v1beta1.MsgSetSendEnabled:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module.
        send_enabled:
          type: array
          description: send_enabled is the list of entries to add or update.
          items:
            type: object
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
        use_default_for:
          type: array
          description: |-
            use_default_for is a list of denoms that should use the params.default_send_enabled value.
            Denoms listed here will have their SendEnabled entries deleted.
            If a denom is included that doesn't have a SendEnabled entry,
            it will be ignored.
          items:
            type: string
      description: |-
        MsgSetSendEnabled is the Msg/SetSendEnabled request type.

        Only entries to add/update/delete need to be included.
        Existing SendEnabled entries that are not included in this
        message are left unchanged.

        Since: cosmos-sdk 0.47
    cosmos.bank.v1beta1.MsgSetSendEnabledResponse:
      type: object
      description: |-
        MsgSetSendEnabledResponse defines the Msg/SetSendEnabled response type.

        Since: cosmos-sdk 0.47
    cosmos.bank.v1beta1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties:
            send_enabled:
              type: array
              description: |-
                Deprecated: Use of SendEnabled in params is deprecated.
                For genesis, use the newly added send_enabled field in the genesis object.
                Storage, lookup, and manipulation of this information is now in the keeper.

                As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  enabled:
                    type: boolean
                description: |-
                  SendEnabled maps coin denom to a send_enabled status (whether a denom is
                  sendable).
            default_send_enabled:
              type: boolean
          description: |-
            params defines the x/bank parameters to update.

            NOTE: All parameters must be supplied.
      description: |-
        MsgUpdateParams is the Msg/UpdateParams request type.

        Since: cosmos-sdk 0.47
    cosmos.bank.v1beta1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.

        Since: cosmos-sdk 0.47
    cosmos.bank.v1beta1.Output:
      type: object
      properties:
        address:
          type: string
        coins:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: Output models transaction outputs.
    cosmos.bank.v1beta1.Params:
      type: object
      properties:
        send_enabled:
          type: array
          description: |-
            Deprecated: Use of SendEnabled in params is deprecated.
            For genesis, use the newly added send_enabled field in the genesis object.
            Storage, lookup, and manipulation of this information is now in the keeper.

            As of cosmos-sdk 0.47, this only exists for backwards compatibility of genesis files.
          items:
            type: object
            properties:
              denom:
                type: string
              enabled:
                type: boolean
            description: |-
              SendEnabled maps coin denom to a send_enabled status (whether a denom is
              sendable).
        default_send_enabled:
          type: boolean
      description: Params defines the parameters for the bank module.
    cosmos.bank.v1beta1.SendEnabled:
      type: object
      properties:
        denom:
          type: string
        enabled:
          type: boolean
      description: |-
        SendEnabled maps coin denom to a send_enabled status (whether a denom is
        sendable).
    cosmos.base.v1beta1.Coin:
      type: object
      properties:
        denom:
          type: string
        amount:
          type: string
      description: |-
        Coin defines a token with a denomination and an amount.

        NOTE: The amount field is an Int which implements the custom method
        signatures required by gogoproto.
    cosmos.base.node.v1beta1.ConfigResponse:
      type: object
      properties:
        minimum_gas_price:
          type: string
        pruning_keep_recent:
          title: pruning settings
          type: string
        pruning_interval:
          type: string
      description: ConfigResponse defines the response structure for the Config gRPC
        query.
    cosmos.base.node.v1beta1.StatusResponse:
      type: object
      properties:
        earliest_store_height:
          title: earliest block height available in the store
          type: string
          format: uint64
        height:
          title: current block height
          type: string
          format: uint64
        timestamp:
          title: block height timestamp
          type: string
          format: date-time
        app_hash:
          title: app hash of the current block
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        validator_hash:
          title: validator hash provided by the consensus header
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: StateResponse defines the response structure for the status of
        a node.
    cosmos.consensus.v1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        block:
          type: object
          properties:
            max_bytes:
              title: |-
                Max block size, in bytes.
                Note: must be greater than 0
              type: string
              format: int64
            max_gas:
              title: |-
                Max gas per block.
                Note: must be greater or equal to -1
              type: string
              format: int64
          description: |-
            params defines the x/consensus parameters to update.
            VersionsParams is not included in this Msg because it is tracked
            separarately in x/upgrade.

            NOTE: All parameters must be supplied.
        evidence:
          type: object
          properties:
            max_age_num_blocks:
              type: string
              description: |-
                Max age of evidence, in blocks.

                The basic formula for calculating this is: MaxAgeDuration / {average block
                time}.
              format: int64
            max_age_duration:
              type: string
              description: |-
                Max age of evidence, in time.

                It should correspond with an app's "unbonding period" or other similar
                mechanism for handling [Nothing-At-Stake
                attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
            max_bytes:
              title: |-
                This sets the maximum size of total evidence in bytes that can be committed in a single block.
                and should fall comfortably under the max block bytes.
                Default is 1048576 or 1MB
              type: string
              format: int64
          description: EvidenceParams determine how we handle evidence of malfeasance.
        validator:
          type: object
          properties:
            pub_key_types:
              type: array
              items:
                type: string
          description: |-
            ValidatorParams restrict the public key types validators can use.
            NOTE: uses ABCI pubkey naming, not Amino names.
        abci:
          title: "Since: cosmos-sdk 0.50"
          type: object
          properties:
            vote_extensions_enable_height:
              type: string
              description: |-
                vote_extensions_enable_height configures the first height during which
                vote extensions will be enabled. During this specified height, and for all
                subsequent heights, precommit messages that do not contain valid extension data
                will be considered invalid. Prior to this height, vote extensions will not
                be used or accepted by validators on the network.

                Once enabled, vote extensions will be created by the application in ExtendVote,
                passed to the application for validation in VerifyVoteExtension and given
                to the application to use when proposing a block during PrepareProposal.
              format: int64
          description: ABCIParams configure functionality specific to the Application
            Blockchain Interface.
      description: MsgUpdateParams is the Msg/UpdateParams request type.
    cosmos.consensus.v1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.
    tendermint.types.ABCIParams:
      type: object
      properties:
        vote_extensions_enable_height:
          type: string
          description: |-
            vote_extensions_enable_height configures the first height during which
            vote extensions will be enabled. During this specified height, and for all
            subsequent heights, precommit messages that do not contain valid extension data
            will be considered invalid. Prior to this height, vote extensions will not
            be used or accepted by validators on the network.

            Once enabled, vote extensions will be created by the application in ExtendVote,
            passed to the application for validation in VerifyVoteExtension and given
            to the application to use when proposing a block during PrepareProposal.
          format: int64
      description: ABCIParams configure functionality specific to the Application
        Blockchain Interface.
    tendermint.types.BlockParams:
      type: object
      properties:
        max_bytes:
          title: |-
            Max block size, in bytes.
            Note: must be greater than 0
          type: string
          format: int64
        max_gas:
          title: |-
            Max gas per block.
            Note: must be greater or equal to -1
          type: string
          format: int64
      description: BlockParams contains limits on the block size.
    tendermint.types.EvidenceParams:
      type: object
      properties:
        max_age_num_blocks:
          type: string
          description: |-
            Max age of evidence, in blocks.

            The basic formula for calculating this is: MaxAgeDuration / {average block
            time}.
          format: int64
        max_age_duration:
          type: string
          description: |-
            Max age of evidence, in time.

            It should correspond with an app's "unbonding period" or other similar
            mechanism for handling [Nothing-At-Stake
            attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
        max_bytes:
          title: |-
            This sets the maximum size of total evidence in bytes that can be committed in a single block.
            and should fall comfortably under the max block bytes.
            Default is 1048576 or 1MB
          type: string
          format: int64
      description: EvidenceParams determine how we handle evidence of malfeasance.
    tendermint.types.ValidatorParams:
      type: object
      properties:
        pub_key_types:
          type: array
          items:
            type: string
      description: |-
        ValidatorParams restrict the public key types validators can use.
        NOTE: uses ABCI pubkey naming, not Amino names.
    cosmos.crisis.v1beta1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        constant_fee:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: constant_fee defines the x/crisis parameter.
      description: |-
        MsgUpdateParams is the Msg/UpdateParams request type.

        Since: cosmos-sdk 0.47
    cosmos.crisis.v1beta1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.

        Since: cosmos-sdk 0.47
    cosmos.crisis.v1beta1.MsgVerifyInvariant:
      type: object
      properties:
        sender:
          type: string
          description: sender is the account address of private key to send coins
            to fee collector account.
        invariant_module_name:
          type: string
          description: name of the invariant module.
        invariant_route:
          type: string
          description: invariant_route is the msg's invariant route.
      description: MsgVerifyInvariant represents a message to verify a particular
        invariance.
    cosmos.crisis.v1beta1.MsgVerifyInvariantResponse:
      type: object
      description: MsgVerifyInvariantResponse defines the Msg/VerifyInvariant response
        type.
    cosmos.distribution.v1beta1.MsgCommunityPoolSpend:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        recipient:
          type: string
        amount:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        MsgCommunityPoolSpend defines a message for sending tokens from the community
        pool to another account. This message is typically executed via a governance
        proposal with the governance module being the executing authority.

        Since: cosmos-sdk 0.47
    cosmos.distribution.v1beta1.MsgCommunityPoolSpendResponse:
      type: object
      description: |-
        MsgCommunityPoolSpendResponse defines the response to executing a
        MsgCommunityPoolSpend message.

        Since: cosmos-sdk 0.47
    cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool:
      type: object
      properties:
        depositor:
          type: string
        validator_address:
          type: string
        amount:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        DepositValidatorRewardsPool defines the request structure to provide
        additional rewards to delegators from a specific validator.

        Since: cosmos-sdk 0.50
    cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPoolResponse:
      type: object
      description: |-
        MsgDepositValidatorRewardsPoolResponse defines the response to executing a
        MsgDepositValidatorRewardsPool message.

        Since: cosmos-sdk 0.50
    cosmos.distribution.v1beta1.MsgFundCommunityPool:
      type: object
      properties:
        amount:
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        depositor:
          type: string
      description: |-
        MsgFundCommunityPool allows an account to directly
        fund the community pool.
    cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse:
      type: object
      description: MsgFundCommunityPoolResponse defines the Msg/FundCommunityPool
        response type.
    cosmos.distribution.v1beta1.MsgSetWithdrawAddress:
      type: object
      properties:
        delegator_address:
          type: string
        withdraw_address:
          type: string
      description: |-
        MsgSetWithdrawAddress sets the withdraw address for
        a delegator (or validator self-delegation).
    cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse:
      type: object
      description: |-
        MsgSetWithdrawAddressResponse defines the Msg/SetWithdrawAddress response
        type.
    cosmos.distribution.v1beta1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties:
            community_tax:
              type: string
            base_proposer_reward:
              type: string
              description: |-
                Deprecated: The base_proposer_reward field is deprecated and is no longer used
                in the x/distribution module's reward mechanism.
            bonus_proposer_reward:
              type: string
              description: |-
                Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
                in the x/distribution module's reward mechanism.
            withdraw_addr_enabled:
              type: boolean
          description: |-
            params defines the x/distribution parameters to update.

            NOTE: All parameters must be supplied.
      description: |-
        MsgUpdateParams is the Msg/UpdateParams request type.

        Since: cosmos-sdk 0.47
    cosmos.distribution.v1beta1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.

        Since: cosmos-sdk 0.47
    cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
      description: |-
        MsgWithdrawDelegatorReward represents delegation withdrawal to a delegator
        from a single validator.
    cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse:
      type: object
      properties:
        amount:
          title: "Since: cosmos-sdk 0.46"
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        MsgWithdrawDelegatorRewardResponse defines the Msg/WithdrawDelegatorReward
        response type.
    cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission:
      type: object
      properties:
        validator_address:
          type: string
      description: |-
        MsgWithdrawValidatorCommission withdraws the full commission to the validator
        address.
    cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse:
      type: object
      properties:
        amount:
          title: "Since: cosmos-sdk 0.46"
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: |-
        MsgWithdrawValidatorCommissionResponse defines the
        Msg/WithdrawValidatorCommission response type.
    cosmos.distribution.v1beta1.Params:
      type: object
      properties:
        community_tax:
          type: string
        base_proposer_reward:
          type: string
          description: |-
            Deprecated: The base_proposer_reward field is deprecated and is no longer used
            in the x/distribution module's reward mechanism.
        bonus_proposer_reward:
          type: string
          description: |-
            Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
            in the x/distribution module's reward mechanism.
        withdraw_addr_enabled:
          type: boolean
      description: Params defines the set of params for the distribution module.
    cosmos.evidence.v1beta1.MsgSubmitEvidence:
      type: object
      properties:
        submitter:
          type: string
          description: submitter is the signer account address of evidence.
        evidence:
          type: object
          additionalProperties:
            type: object
          description: evidence defines the evidence of misbehavior.
      description: |-
        MsgSubmitEvidence represents a message that supports submitting arbitrary
        Evidence of misbehavior such as equivocation or counterfactual signing.
    cosmos.evidence.v1beta1.MsgSubmitEvidenceResponse:
      type: object
      properties:
        hash:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: hash defines the hash of the evidence.
          format: byte
      description: MsgSubmitEvidenceResponse defines the Msg/SubmitEvidence response
        type.
    cosmos.feegrant.v1beta1.MsgGrantAllowance:
      type: object
      properties:
        granter:
          type: string
          description: granter is the address of the user granting an allowance of
            their funds.
        grantee:
          type: string
          description: grantee is the address of the user being granted an allowance
            of another user's funds.
        allowance:
          type: object
          additionalProperties:
            type: object
          description: "allowance can be any of basic, periodic, allowed fee allowance."
      description: |-
        MsgGrantAllowance adds permission for Grantee to spend up to Allowance
        of fees from the account of Granter.
    cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse:
      type: object
      description: MsgGrantAllowanceResponse defines the Msg/GrantAllowanceResponse
        response type.
    cosmos.feegrant.v1beta1.MsgPruneAllowances:
      type: object
      properties:
        pruner:
          type: string
          description: pruner is the address of the user pruning expired allowances.
      description: |-
        MsgPruneAllowances prunes expired fee allowances.

        Since cosmos-sdk 0.50
    cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse:
      type: object
      description: |-
        MsgPruneAllowancesResponse defines the Msg/PruneAllowancesResponse response type.

        Since cosmos-sdk 0.50
    cosmos.feegrant.v1beta1.MsgRevokeAllowance:
      type: object
      properties:
        granter:
          type: string
          description: granter is the address of the user granting an allowance of
            their funds.
        grantee:
          type: string
          description: grantee is the address of the user being granted an allowance
            of another user's funds.
      description: MsgRevokeAllowance removes any existing Allowance from Granter
        to Grantee.
    cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse:
      type: object
      description: MsgRevokeAllowanceResponse defines the Msg/RevokeAllowanceResponse
        response type.
    cosmos.gov.v1.MsgCancelProposal:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        proposer:
          type: string
          description: proposer is the account address of the proposer.
      description: |-
        MsgCancelProposal is the Msg/CancelProposal request type.

        Since: cosmos-sdk 0.50
    cosmos.gov.v1.MsgCancelProposalResponse:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        canceled_time:
          type: string
          description: canceled_time is the time when proposal is canceled.
          format: date-time
        canceled_height:
          type: string
          description: canceled_height defines the block height at which the proposal
            is canceled.
          format: uint64
      description: |-
        MsgCancelProposalResponse defines the response structure for executing a
        MsgCancelProposal message.

        Since: cosmos-sdk 0.50
    cosmos.gov.v1.MsgDeposit:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        depositor:
          type: string
          description: depositor defines the deposit addresses from the proposals.
        amount:
          type: array
          description: amount to be deposited by depositor.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: MsgDeposit defines a message to submit a deposit to an existing
        proposal.
    cosmos.gov.v1.MsgDepositResponse:
      type: object
      description: MsgDepositResponse defines the Msg/Deposit response type.
    cosmos.gov.v1.MsgExecLegacyContent:
      type: object
      properties:
        content:
          type: object
          additionalProperties:
            type: object
          description: content is the proposal's content.
        authority:
          type: string
          description: authority must be the gov module address.
      description: |-
        MsgExecLegacyContent is used to wrap the legacy content field into a message.
        This ensures backwards compatibility with v1beta1.MsgSubmitProposal.
    cosmos.gov.v1.MsgExecLegacyContentResponse:
      type: object
      description: MsgExecLegacyContentResponse defines the Msg/ExecLegacyContent
        response type.
    cosmos.gov.v1.MsgSubmitProposal:
      type: object
      properties:
        messages:
          type: array
          description: messages are the arbitrary messages to be executed if proposal
            passes.
          items:
            type: object
            additionalProperties:
              type: object
            description: |-
              `Any` contains an arbitrary serialized protocol buffer message along with a
              URL that describes the type of the serialized message.

              Protobuf library provides support to pack/unpack Any values in the form
              of utility functions or additional generated methods of the Any type.

              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }
                  // or ...
                  if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                    foo = any.unpack(Foo.getDefaultInstance());
                  }

              Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

              Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := anypb.New(foo)
                   if err != nil {
                     ...
                   }
                   ...
                   foo := &pb.Foo{}
                   if err := any.UnmarshalTo(foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use
              'type.googleapis.com/full.type.name' as the type URL and the unpack
              methods only use the fully qualified type name after the last '/'
              in the type URL, for example "foo.bar.com/x/y.z" will yield type
              name "y.z".

              JSON

              The JSON representation of an `Any` value uses the regular
              representation of the deserialized, embedded message, with an
              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON
              representation, that representation will be embedded adding a field
              `value` which holds the custom JSON in addition to the `@type`
              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
        initial_deposit:
          type: array
          description: initial_deposit is the deposit value that must be paid at proposal
            submission.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        proposer:
          type: string
          description: proposer is the account address of the proposer.
        metadata:
          type: string
          description: metadata is any arbitrary metadata attached to the proposal.
        title:
          type: string
          description: |-
            title is the title of the proposal.

            Since: cosmos-sdk 0.47
        summary:
          title: summary is the summary of the proposal
          type: string
          description: "Since: cosmos-sdk 0.47"
        expedited:
          title: expedited defines if the proposal is expedited or not
          type: boolean
          description: "Since: cosmos-sdk 0.50"
      description: |-
        MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
        proposal Content.
    cosmos.gov.v1.MsgSubmitProposalResponse:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
      description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response
        type.
    cosmos.gov.v1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties:
            min_deposit:
              type: array
              description: Minimum deposit for a proposal to enter voting period.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            max_deposit_period:
              type: string
              description: |-
                Maximum period for Atom holders to deposit on a proposal. Initial value: 2
                months.
            voting_period:
              type: string
              description: Duration of the voting period.
            quorum:
              type: string
              description: |-
                Minimum percentage of total stake needed to vote for a result to be
                 considered valid.
            threshold:
              type: string
              description: "Minimum proportion of Yes votes for proposal to pass.\
                \ Default value: 0.5."
            veto_threshold:
              type: string
              description: |-
                Minimum value of Veto votes to Total votes ratio for proposal to be
                 vetoed. Default value: 1/3.
            min_initial_deposit_ratio:
              type: string
              description: The ratio representing the proportion of the deposit value
                that must be paid at proposal submission.
            proposal_cancel_ratio:
              type: string
              description: |-
                The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.

                Since: cosmos-sdk 0.50
            proposal_cancel_dest:
              type: string
              description: |-
                The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
                If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.

                Since: cosmos-sdk 0.50
            expedited_voting_period:
              type: string
              description: |-
                Duration of the voting period of an expedited proposal.

                Since: cosmos-sdk 0.50
            expedited_threshold:
              type: string
              description: |-
                Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.

                Since: cosmos-sdk 0.50
            expedited_min_deposit:
              type: array
              description: Minimum expedited deposit for a proposal to enter voting
                period.
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            burn_vote_quorum:
              title: burn deposits if a proposal does not meet quorum
              type: boolean
            burn_proposal_deposit_prevote:
              title: burn deposits if the proposal does not enter voting period
              type: boolean
            burn_vote_veto:
              title: burn deposits if quorum with vote type no_veto is met
              type: boolean
            min_deposit_ratio:
              type: string
              description: |-
                The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
                Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
                required.

                Since: cosmos-sdk 0.50
          description: |-
            params defines the x/gov parameters to update.

            NOTE: All parameters must be supplied.
      description: |-
        MsgUpdateParams is the Msg/UpdateParams request type.

        Since: cosmos-sdk 0.47
    cosmos.gov.v1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.

        Since: cosmos-sdk 0.47
    cosmos.gov.v1.MsgVote:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        voter:
          type: string
          description: voter is the voter address for the proposal.
        option:
          type: string
          description: option defines the vote option.
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        metadata:
          type: string
          description: metadata is any arbitrary metadata attached to the Vote.
      description: MsgVote defines a message to cast a vote.
    cosmos.gov.v1.MsgVoteResponse:
      type: object
      description: MsgVoteResponse defines the Msg/Vote response type.
    cosmos.gov.v1.MsgVoteWeighted:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        voter:
          type: string
          description: voter is the voter address for the proposal.
        options:
          type: array
          description: options defines the weighted vote options.
          items:
            type: object
            properties:
              option:
                type: string
                description: "option defines the valid vote options, it must not contain\
                  \ duplicate vote options."
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              weight:
                type: string
                description: weight is the vote weight associated with the vote option.
            description: WeightedVoteOption defines a unit of vote for vote split.
        metadata:
          type: string
          description: metadata is any arbitrary metadata attached to the VoteWeighted.
      description: MsgVoteWeighted defines a message to cast a vote.
    cosmos.gov.v1.MsgVoteWeightedResponse:
      type: object
      description: MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.
    cosmos.gov.v1.Params:
      type: object
      properties:
        min_deposit:
          type: array
          description: Minimum deposit for a proposal to enter voting period.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        max_deposit_period:
          type: string
          description: |-
            Maximum period for Atom holders to deposit on a proposal. Initial value: 2
            months.
        voting_period:
          type: string
          description: Duration of the voting period.
        quorum:
          type: string
          description: |-
            Minimum percentage of total stake needed to vote for a result to be
             considered valid.
        threshold:
          type: string
          description: "Minimum proportion of Yes votes for proposal to pass. Default\
            \ value: 0.5."
        veto_threshold:
          type: string
          description: |-
            Minimum value of Veto votes to Total votes ratio for proposal to be
             vetoed. Default value: 1/3.
        min_initial_deposit_ratio:
          type: string
          description: The ratio representing the proportion of the deposit value
            that must be paid at proposal submission.
        proposal_cancel_ratio:
          type: string
          description: |-
            The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.

            Since: cosmos-sdk 0.50
        proposal_cancel_dest:
          type: string
          description: |-
            The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
            If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.

            Since: cosmos-sdk 0.50
        expedited_voting_period:
          type: string
          description: |-
            Duration of the voting period of an expedited proposal.

            Since: cosmos-sdk 0.50
        expedited_threshold:
          type: string
          description: |-
            Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.

            Since: cosmos-sdk 0.50
        expedited_min_deposit:
          type: array
          description: Minimum expedited deposit for a proposal to enter voting period.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        burn_vote_quorum:
          title: burn deposits if a proposal does not meet quorum
          type: boolean
        burn_proposal_deposit_prevote:
          title: burn deposits if the proposal does not enter voting period
          type: boolean
        burn_vote_veto:
          title: burn deposits if quorum with vote type no_veto is met
          type: boolean
        min_deposit_ratio:
          type: string
          description: |-
            The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
            Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
            required.

            Since: cosmos-sdk 0.50
      description: |-
        Params defines the parameters for the x/gov module.

        Since: cosmos-sdk 0.47
    cosmos.gov.v1.VoteOption:
      type: string
      description: |-
        VoteOption enumerates the valid vote options for a given governance proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      default: VOTE_OPTION_UNSPECIFIED
      enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    cosmos.gov.v1.WeightedVoteOption:
      type: object
      properties:
        option:
          type: string
          description: "option defines the valid vote options, it must not contain\
            \ duplicate vote options."
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        weight:
          type: string
          description: weight is the vote weight associated with the vote option.
      description: WeightedVoteOption defines a unit of vote for vote split.
    cosmos.gov.v1beta1.MsgDeposit:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        depositor:
          type: string
          description: depositor defines the deposit addresses from the proposals.
        amount:
          type: array
          description: amount to be deposited by depositor.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
      description: MsgDeposit defines a message to submit a deposit to an existing
        proposal.
    cosmos.gov.v1beta1.MsgDepositResponse:
      type: object
      description: MsgDepositResponse defines the Msg/Deposit response type.
    cosmos.gov.v1beta1.MsgSubmitProposal:
      type: object
      properties:
        content:
          type: object
          additionalProperties:
            type: object
          description: content is the proposal's content.
        initial_deposit:
          type: array
          description: initial_deposit is the deposit value that must be paid at proposal
            submission.
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        proposer:
          type: string
          description: proposer is the account address of the proposer.
      description: |-
        MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
        proposal Content.
    cosmos.gov.v1beta1.MsgSubmitProposalResponse:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
      description: MsgSubmitProposalResponse defines the Msg/SubmitProposal response
        type.
    cosmos.gov.v1beta1.MsgVote:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        voter:
          type: string
          description: voter is the voter address for the proposal.
        option:
          type: string
          description: option defines the vote option.
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
      description: MsgVote defines a message to cast a vote.
    cosmos.gov.v1beta1.MsgVoteResponse:
      type: object
      description: MsgVoteResponse defines the Msg/Vote response type.
    cosmos.gov.v1beta1.MsgVoteWeighted:
      type: object
      properties:
        proposal_id:
          type: string
          description: proposal_id defines the unique id of the proposal.
          format: uint64
        voter:
          type: string
          description: voter is the voter address for the proposal.
        options:
          type: array
          description: options defines the weighted vote options.
          items:
            type: object
            properties:
              option:
                type: string
                description: "option defines the valid vote options, it must not contain\
                  \ duplicate vote options."
                default: VOTE_OPTION_UNSPECIFIED
                enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              weight:
                type: string
                description: weight is the vote weight associated with the vote option.
            description: |-
              WeightedVoteOption defines a unit of vote for vote split.

              Since: cosmos-sdk 0.43
      description: |-
        MsgVoteWeighted defines a message to cast a vote.

        Since: cosmos-sdk 0.43
    cosmos.gov.v1beta1.MsgVoteWeightedResponse:
      type: object
      description: |-
        MsgVoteWeightedResponse defines the Msg/VoteWeighted response type.

        Since: cosmos-sdk 0.43
    cosmos.gov.v1beta1.VoteOption:
      type: string
      description: |-
        VoteOption enumerates the valid vote options for a given governance proposal.

         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
      default: VOTE_OPTION_UNSPECIFIED
      enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    cosmos.gov.v1beta1.WeightedVoteOption:
      type: object
      properties:
        option:
          type: string
          description: "option defines the valid vote options, it must not contain\
            \ duplicate vote options."
          default: VOTE_OPTION_UNSPECIFIED
          enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        weight:
          type: string
          description: weight is the vote weight associated with the vote option.
      description: |-
        WeightedVoteOption defines a unit of vote for vote split.

        Since: cosmos-sdk 0.43
    cosmos.mint.v1beta1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties:
            mint_denom:
              title: type of coin to mint
              type: string
            inflation_rate_change:
              title: maximum annual change in inflation rate
              type: string
            inflation_max:
              title: maximum inflation rate
              type: string
            inflation_min:
              title: minimum inflation rate
              type: string
            goal_bonded:
              title: goal of percent bonded atoms
              type: string
            blocks_per_year:
              title: expected blocks per year
              type: string
              format: uint64
          description: |-
            params defines the x/mint parameters to update.

            NOTE: All parameters must be supplied.
      description: |-
        MsgUpdateParams is the Msg/UpdateParams request type.

        Since: cosmos-sdk 0.47
    cosmos.mint.v1beta1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.

        Since: cosmos-sdk 0.47
    cosmos.mint.v1beta1.Params:
      type: object
      properties:
        mint_denom:
          title: type of coin to mint
          type: string
        inflation_rate_change:
          title: maximum annual change in inflation rate
          type: string
        inflation_max:
          title: maximum inflation rate
          type: string
        inflation_min:
          title: minimum inflation rate
          type: string
        goal_bonded:
          title: goal of percent bonded atoms
          type: string
        blocks_per_year:
          title: expected blocks per year
          type: string
          format: uint64
      description: Params defines the parameters for the x/mint module.
    cosmos.params.v1beta1.ParamChange:
      type: object
      properties:
        subspace:
          type: string
        key:
          type: string
        value:
          type: string
      description: |-
        ParamChange defines an individual parameter change, for use in
        ParameterChangeProposal.
    cosmos.params.v1beta1.QueryParamsResponse:
      type: object
      properties:
        param:
          type: object
          properties:
            subspace:
              type: string
            key:
              type: string
            value:
              type: string
          description: param defines the queried parameter.
      description: QueryParamsResponse is response type for the Query/Params RPC method.
    cosmos.params.v1beta1.QuerySubspacesResponse:
      type: object
      properties:
        subspaces:
          type: array
          items:
            type: object
            properties:
              subspace:
                type: string
              keys:
                type: array
                items:
                  type: string
            description: |-
              Subspace defines a parameter subspace name and all the keys that exist for
              the subspace.

              Since: cosmos-sdk 0.46
      description: |-
        QuerySubspacesResponse defines the response types for querying for all
        registered subspaces and all keys for a subspace.

        Since: cosmos-sdk 0.46
    cosmos.params.v1beta1.Subspace:
      type: object
      properties:
        subspace:
          type: string
        keys:
          type: array
          items:
            type: string
      description: |-
        Subspace defines a parameter subspace name and all the keys that exist for
        the subspace.

        Since: cosmos-sdk 0.46
    cosmos.slashing.v1beta1.MsgUnjail:
      title: MsgUnjail defines the Msg/Unjail request type
      type: object
      properties:
        validator_addr:
          type: string
    cosmos.slashing.v1beta1.MsgUnjailResponse:
      title: MsgUnjailResponse defines the Msg/Unjail response type
      type: object
    cosmos.slashing.v1beta1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties:
            signed_blocks_window:
              type: string
              format: int64
            min_signed_per_window:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            downtime_jail_duration:
              type: string
            slash_fraction_double_sign:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            slash_fraction_downtime:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: |-
            params defines the x/slashing parameters to update.

            NOTE: All parameters must be supplied.
      description: |-
        MsgUpdateParams is the Msg/UpdateParams request type.

        Since: cosmos-sdk 0.47
    cosmos.slashing.v1beta1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.

        Since: cosmos-sdk 0.47
    cosmos.slashing.v1beta1.Params:
      type: object
      properties:
        signed_blocks_window:
          type: string
          format: int64
        min_signed_per_window:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        downtime_jail_duration:
          type: string
        slash_fraction_double_sign:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        slash_fraction_downtime:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: Params represents the parameters used for by the slashing module.
    cosmos.staking.v1beta1.CommissionRates:
      type: object
      properties:
        rate:
          type: string
          description: "rate is the commission rate charged to delegators, as a fraction."
        max_rate:
          type: string
          description: "max_rate defines the maximum commission rate which validator\
            \ can ever charge, as a fraction."
        max_change_rate:
          type: string
          description: "max_change_rate defines the maximum daily increase of the\
            \ validator commission, as a fraction."
      description: |-
        CommissionRates defines the initial commission rates to be used for creating
        a validator.
    cosmos.staking.v1beta1.Description:
      type: object
      properties:
        moniker:
          type: string
          description: moniker defines a human-readable name for the validator.
        identity:
          type: string
          description: identity defines an optional identity signature (ex. UPort
            or Keybase).
        website:
          type: string
          description: website defines an optional website link.
        security_contact:
          type: string
          description: security_contact defines an optional email for security contact.
        details:
          type: string
          description: details define other optional details.
      description: Description defines a validator description.
    cosmos.staking.v1beta1.MsgBeginRedelegate:
      type: object
      properties:
        delegator_address:
          type: string
        validator_src_address:
          type: string
        validator_dst_address:
          type: string
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        MsgBeginRedelegate defines a SDK message for performing a redelegation
        of coins from a delegator and source validator to a destination validator.
    cosmos.staking.v1beta1.MsgBeginRedelegateResponse:
      type: object
      properties:
        completion_time:
          type: string
          format: date-time
      description: MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response
        type.
    cosmos.staking.v1beta1.MsgCancelUnbondingDelegation:
      title: MsgCancelUnbondingDelegation defines the SDK message for performing a
        cancel unbonding delegation for delegator
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        amount:
          title: amount is always less than or equal to unbonding delegation entry
            balance
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        creation_height:
          type: string
          description: creation_height is the height which the unbonding took place.
          format: int64
      description: "Since: cosmos-sdk 0.46"
    cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse:
      title: MsgCancelUnbondingDelegationResponse
      type: object
      description: "Since: cosmos-sdk 0.46"
    cosmos.staking.v1beta1.MsgCreateValidator:
      type: object
      properties:
        description:
          type: object
          properties:
            moniker:
              type: string
              description: moniker defines a human-readable name for the validator.
            identity:
              type: string
              description: identity defines an optional identity signature (ex. UPort
                or Keybase).
            website:
              type: string
              description: website defines an optional website link.
            security_contact:
              type: string
              description: security_contact defines an optional email for security
                contact.
            details:
              type: string
              description: details define other optional details.
          description: Description defines a validator description.
        commission:
          type: object
          properties:
            rate:
              type: string
              description: "rate is the commission rate charged to delegators, as\
                \ a fraction."
            max_rate:
              type: string
              description: "max_rate defines the maximum commission rate which validator\
                \ can ever charge, as a fraction."
            max_change_rate:
              type: string
              description: "max_change_rate defines the maximum daily increase of\
                \ the validator commission, as a fraction."
          description: |-
            CommissionRates defines the initial commission rates to be used for creating
            a validator.
        min_self_delegation:
          type: string
        delegator_address:
          type: string
          description: |-
            Deprecated: Use of Delegator Address in MsgCreateValidator is deprecated.
            The validator address bytes and delegator address bytes refer to the same account while creating validator (defer
            only in bech32 notation).
        validator_address:
          type: string
        pubkey:
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        value:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: MsgCreateValidator defines a SDK message for creating a new validator.
    cosmos.staking.v1beta1.MsgCreateValidatorResponse:
      type: object
      description: MsgCreateValidatorResponse defines the Msg/CreateValidator response
        type.
    cosmos.staking.v1beta1.MsgDelegate:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        MsgDelegate defines a SDK message for performing a delegation of coins
        from a delegator to a validator.
    cosmos.staking.v1beta1.MsgDelegateResponse:
      type: object
      description: MsgDelegateResponse defines the Msg/Delegate response type.
    cosmos.staking.v1beta1.MsgEditValidator:
      type: object
      properties:
        description:
          type: object
          properties:
            moniker:
              type: string
              description: moniker defines a human-readable name for the validator.
            identity:
              type: string
              description: identity defines an optional identity signature (ex. UPort
                or Keybase).
            website:
              type: string
              description: website defines an optional website link.
            security_contact:
              type: string
              description: security_contact defines an optional email for security
                contact.
            details:
              type: string
              description: details define other optional details.
          description: Description defines a validator description.
        validator_address:
          type: string
        commission_rate:
          title: |-
            We pass a reference to the new commission rate and min self delegation as
            it's not mandatory to update. If not updated, the deserialized rate will be
            zero with no way to distinguish if an update was intended.
            REF: #2373
          type: string
        min_self_delegation:
          type: string
      description: MsgEditValidator defines a SDK message for editing an existing
        validator.
    cosmos.staking.v1beta1.MsgEditValidatorResponse:
      type: object
      description: MsgEditValidatorResponse defines the Msg/EditValidator response
        type.
    cosmos.staking.v1beta1.MsgUndelegate:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        amount:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: |-
        MsgUndelegate defines a SDK message for performing an undelegation from a
        delegate and a validator.
    cosmos.staking.v1beta1.MsgUndelegateResponse:
      type: object
      properties:
        completion_time:
          type: string
          format: date-time
        amount:
          title: amount returns the amount of undelegated coins
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      description: MsgUndelegateResponse defines the Msg/Undelegate response type.
    cosmos.staking.v1beta1.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties:
            unbonding_time:
              type: string
              description: unbonding_time is the time duration of unbonding.
            max_validators:
              type: integer
              description: max_validators is the maximum number of validators.
              format: int64
            max_entries:
              type: integer
              description: max_entries is the max entries for either unbonding delegation
                or redelegation (per pair/trio).
              format: int64
            historical_entries:
              type: integer
              description: historical_entries is the number of historical entries
                to persist.
              format: int64
            bond_denom:
              type: string
              description: bond_denom defines the bondable coin denomination.
            min_commission_rate:
              title: min_commission_rate is the chain-wide minimum commission rate
                that a validator can charge their delegators
              type: string
          description: |-
            params defines the x/staking parameters to update.

            NOTE: All parameters must be supplied.
      description: |-
        MsgUpdateParams is the Msg/UpdateParams request type.

        Since: cosmos-sdk 0.47
    cosmos.staking.v1beta1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.

        Since: cosmos-sdk 0.47
    cosmos.staking.v1beta1.Params:
      type: object
      properties:
        unbonding_time:
          type: string
          description: unbonding_time is the time duration of unbonding.
        max_validators:
          type: integer
          description: max_validators is the maximum number of validators.
          format: int64
        max_entries:
          type: integer
          description: max_entries is the max entries for either unbonding delegation
            or redelegation (per pair/trio).
          format: int64
        historical_entries:
          type: integer
          description: historical_entries is the number of historical entries to persist.
          format: int64
        bond_denom:
          type: string
          description: bond_denom defines the bondable coin denomination.
        min_commission_rate:
          title: min_commission_rate is the chain-wide minimum commission rate that
            a validator can charge their delegators
          type: string
      description: Params defines the parameters for the x/staking module.
    ibc.applications.fee.v1.Fee:
      title: "Fee defines the ICS29 receive, acknowledgement and timeout fees"
      type: object
      properties:
        recv_fee:
          title: the packet receive fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        ack_fee:
          title: the packet acknowledgement fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
        timeout_fee:
          title: the packet timeout fee
          type: array
          items:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: |-
              Coin defines a token with a denomination and an amount.

              NOTE: The amount field is an Int which implements the custom method
              signatures required by gogoproto.
    ibc.applications.fee.v1.MsgPayPacketFee:
      title: |-
        MsgPayPacketFee defines the request type for the PayPacketFee rpc
        This Msg can be used to pay for a packet at the next sequence send & should be combined with the Msg that will be
        paid for
      type: object
      properties:
        fee:
          title: "fee encapsulates the recv, ack and timeout fees associated with\
            \ an IBC packet"
          type: object
          properties:
            recv_fee:
              title: the packet receive fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            ack_fee:
              title: the packet acknowledgement fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            timeout_fee:
              title: the packet timeout fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
        source_port_id:
          title: the source port unique identifier
          type: string
        source_channel_id:
          title: the source channel unique identifer
          type: string
        signer:
          title: account address to refund fee if necessary
          type: string
        relayers:
          title: optional list of relayers permitted to the receive packet fees
          type: array
          items:
            type: string
    ibc.applications.fee.v1.MsgPayPacketFeeAsync:
      title: |-
        MsgPayPacketFeeAsync defines the request type for the PayPacketFeeAsync rpc
        This Msg can be used to pay for a packet at a specified sequence (instead of the next sequence send)
      type: object
      properties:
        packet_id:
          title: "unique packet identifier comprised of the channel ID, port ID and\
            \ sequence"
          type: object
          properties:
            port_id:
              title: channel port identifier
              type: string
            channel_id:
              title: channel unique identifier
              type: string
            sequence:
              title: packet sequence
              type: string
              format: uint64
        packet_fee:
          title: the packet fee associated with a particular IBC packet
          type: object
          properties:
            fee:
              title: "fee encapsulates the recv, ack and timeout fees associated with\
                \ an IBC packet"
              type: object
              properties:
                recv_fee:
                  title: the packet receive fee
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                ack_fee:
                  title: the packet acknowledgement fee
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
                timeout_fee:
                  title: the packet timeout fee
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: |-
                      Coin defines a token with a denomination and an amount.

                      NOTE: The amount field is an Int which implements the custom method
                      signatures required by gogoproto.
            refund_address:
              title: the refund address for unspent fees
              type: string
            relayers:
              title: optional list of relayers permitted to receive fees
              type: array
              items:
                type: string
    ibc.applications.fee.v1.MsgPayPacketFeeAsyncResponse:
      title: MsgPayPacketFeeAsyncResponse defines the response type for the PayPacketFeeAsync
        rpc
      type: object
    ibc.applications.fee.v1.MsgPayPacketFeeResponse:
      title: MsgPayPacketFeeResponse defines the response type for the PayPacketFee
        rpc
      type: object
    ibc.applications.fee.v1.MsgRegisterCounterpartyPayee:
      title: MsgRegisterCounterpartyPayee defines the request type for the RegisterCounterpartyPayee
        rpc
      type: object
      properties:
        port_id:
          title: unique port identifier
          type: string
        channel_id:
          title: unique channel identifier
          type: string
        relayer:
          title: the relayer address
          type: string
        counterparty_payee:
          title: the counterparty payee address
          type: string
    ibc.applications.fee.v1.MsgRegisterCounterpartyPayeeResponse:
      title: MsgRegisterCounterpartyPayeeResponse defines the response type for the
        RegisterCounterpartyPayee rpc
      type: object
    ibc.applications.fee.v1.MsgRegisterPayee:
      title: MsgRegisterPayee defines the request type for the RegisterPayee rpc
      type: object
      properties:
        port_id:
          title: unique port identifier
          type: string
        channel_id:
          title: unique channel identifier
          type: string
        relayer:
          title: the relayer address
          type: string
        payee:
          title: the payee address
          type: string
    ibc.applications.fee.v1.MsgRegisterPayeeResponse:
      title: MsgRegisterPayeeResponse defines the response type for the RegisterPayee
        rpc
      type: object
    ibc.applications.fee.v1.PacketFee:
      title: "PacketFee contains ICS29 relayer fees, refund address and optional list\
        \ of permitted relayers"
      type: object
      properties:
        fee:
          title: "fee encapsulates the recv, ack and timeout fees associated with\
            \ an IBC packet"
          type: object
          properties:
            recv_fee:
              title: the packet receive fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            ack_fee:
              title: the packet acknowledgement fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
            timeout_fee:
              title: the packet timeout fee
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: |-
                  Coin defines a token with a denomination and an amount.

                  NOTE: The amount field is an Int which implements the custom method
                  signatures required by gogoproto.
        refund_address:
          title: the refund address for unspent fees
          type: string
        relayers:
          title: optional list of relayers permitted to receive fees
          type: array
          items:
            type: string
    ibc.core.channel.v1.PacketId:
      title: |-
        PacketId is an identifer for a unique Packet
        Source chains refer to packets by source port/channel
        Destination chains refer to packets by destination port/channel
      type: object
      properties:
        port_id:
          title: channel port identifier
          type: string
        channel_id:
          title: channel unique identifier
          type: string
        sequence:
          title: packet sequence
          type: string
          format: uint64
    ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount:
      title: MsgRegisterInterchainAccount defines the payload for Msg/RegisterAccount
      type: object
      properties:
        owner:
          type: string
        connection_id:
          type: string
        version:
          type: string
    ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse:
      title: MsgRegisterInterchainAccountResponse defines the response for Msg/RegisterAccount
      type: object
      properties:
        channel_id:
          type: string
        port_id:
          type: string
    ibc.applications.interchain_accounts.controller.v1.MsgSendTx:
      title: MsgSendTx defines the payload for Msg/SendTx
      type: object
      properties:
        owner:
          type: string
        connection_id:
          type: string
        packet_data:
          type: object
          properties:
            type:
              title: |-
                Type defines a classification of message issued from a controller chain to its associated interchain accounts
                host
              type: string
              description: |-
                - TYPE_UNSPECIFIED: Default zero value enumeration
                 - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts host chain
              default: TYPE_UNSPECIFIED
              enum:
              - TYPE_UNSPECIFIED
              - TYPE_EXECUTE_TX
            data:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            memo:
              type: string
          description: "InterchainAccountPacketData is comprised of a raw transaction,\
            \ type of transaction and optional memo field."
        relative_timeout:
          type: string
          description: |-
            Relative timeout timestamp provided will be added to the current block time during transaction execution.
            The timeout timestamp must be non-zero.
          format: uint64
    ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse:
      title: MsgSendTxResponse defines the response for MsgSendTx
      type: object
      properties:
        sequence:
          type: string
          format: uint64
    ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams:
      title: MsgUpdateParams defines the payload for Msg/UpdateParams
      type: object
      properties:
        signer:
          title: signer address
          type: string
        params:
          type: object
          properties:
            controller_enabled:
              type: boolean
              description: controller_enabled enables or disables the controller submodule.
          description: |-
            params defines the 27-interchain-accounts/controller parameters to update.

            NOTE: All parameters must be supplied.
    ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse:
      title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
      type: object
    ibc.applications.interchain_accounts.controller.v1.Params:
      type: object
      properties:
        controller_enabled:
          type: boolean
          description: controller_enabled enables or disables the controller submodule.
      description: |-
        Params defines the set of on-chain interchain accounts parameters.
        The following parameters may be used to disable the controller submodule.
    ibc.applications.interchain_accounts.v1.InterchainAccountPacketData:
      type: object
      properties:
        type:
          title: |-
            Type defines a classification of message issued from a controller chain to its associated interchain accounts
            host
          type: string
          description: |-
            - TYPE_UNSPECIFIED: Default zero value enumeration
             - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts host chain
          default: TYPE_UNSPECIFIED
          enum:
          - TYPE_UNSPECIFIED
          - TYPE_EXECUTE_TX
        data:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        memo:
          type: string
      description: "InterchainAccountPacketData is comprised of a raw transaction,\
        \ type of transaction and optional memo field."
    ibc.applications.interchain_accounts.v1.Type:
      title: |-
        Type defines a classification of message issued from a controller chain to its associated interchain accounts
        host
      type: string
      description: |-
        - TYPE_UNSPECIFIED: Default zero value enumeration
         - TYPE_EXECUTE_TX: Execute a transaction on an interchain accounts host chain
      default: TYPE_UNSPECIFIED
      enum:
      - TYPE_UNSPECIFIED
      - TYPE_EXECUTE_TX
    ibc.applications.interchain_accounts.host.v1.MsgUpdateParams:
      title: MsgUpdateParams defines the payload for Msg/UpdateParams
      type: object
      properties:
        signer:
          title: signer address
          type: string
        params:
          type: object
          properties:
            host_enabled:
              type: boolean
              description: host_enabled enables or disables the host submodule.
            allow_messages:
              type: array
              description: allow_messages defines a list of sdk message typeURLs allowed
                to be executed on a host chain.
              items:
                type: string
          description: |-
            params defines the 27-interchain-accounts/host parameters to update.

            NOTE: All parameters must be supplied.
    ibc.applications.interchain_accounts.host.v1.MsgUpdateParamsResponse:
      title: MsgUpdateParamsResponse defines the response for Msg/UpdateParams
      type: object
    ibc.applications.interchain_accounts.host.v1.Params:
      type: object
      properties:
        host_enabled:
          type: boolean
          description: host_enabled enables or disables the host submodule.
        allow_messages:
          type: array
          description: allow_messages defines a list of sdk message typeURLs allowed
            to be executed on a host chain.
          items:
            type: string
      description: |-
        Params defines the set of on-chain interchain accounts parameters.
        The following parameters may be used to disable the host submodule.
    ibc.applications.transfer.v1.MsgTransfer:
      title: |-
        MsgTransfer defines a msg to transfer fungible tokens (i.e Coins) between
        ICS20 enabled chains. See ICS Spec here:
        https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
      type: object
      properties:
        source_port:
          title: the port on which the packet will be sent
          type: string
        source_channel:
          title: the channel by which the packet will be sent
          type: string
        token:
          title: the tokens to be transferred
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        sender:
          title: the sender address
          type: string
        receiver:
          title: the recipient address on the destination chain
          type: string
        timeout_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Timeout height relative to the current block height.
            The timeout is disabled when set to 0.
        timeout_timestamp:
          type: string
          description: |-
            Timeout timestamp in absolute nanoseconds since unix epoch.
            The timeout is disabled when set to 0.
          format: uint64
        memo:
          title: optional memo
          type: string
    ibc.applications.transfer.v1.MsgTransferResponse:
      type: object
      properties:
        sequence:
          title: sequence number of the transfer packet sent
          type: string
          format: uint64
      description: MsgTransferResponse defines the Msg/Transfer response type.
    ibc.applications.transfer.v1.MsgUpdateParams:
      type: object
      properties:
        signer:
          title: signer address
          type: string
        params:
          type: object
          properties:
            send_enabled:
              type: boolean
              description: |-
                send_enabled enables or disables all cross-chain token transfers from this
                chain.
            receive_enabled:
              type: boolean
              description: |-
                receive_enabled enables or disables all cross-chain token transfers to this
                chain.
          description: |-
            params defines the transfer parameters to update.

            NOTE: All parameters must be supplied.
      description: MsgUpdateParams is the Msg/UpdateParams request type.
    ibc.applications.transfer.v1.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.
    ibc.applications.transfer.v1.Params:
      type: object
      properties:
        send_enabled:
          type: boolean
          description: |-
            send_enabled enables or disables all cross-chain token transfers from this
            chain.
        receive_enabled:
          type: boolean
          description: |-
            receive_enabled enables or disables all cross-chain token transfers to this
            chain.
      description: |-
        Params defines the set of IBC transfer parameters.
        NOTE: To prevent a single token from being transferred, set the
        TransfersEnabled parameter to true and then set the bank module's SendEnabled
        parameter for the denomination to false.
    ibc.core.client.v1.Height:
      title: |-
        Height is a monotonically increasing data type
        that can be compared against another Height for the purposes of updating and
        freezing clients
      type: object
      properties:
        revision_number:
          title: the revision that the client is currently on
          type: string
          format: uint64
        revision_height:
          title: the height within the given revision
          type: string
          format: uint64
      description: |-
        Normally the RevisionHeight is incremented at each height while keeping
        RevisionNumber the same. However some consensus algorithms may choose to
        reset the height in certain conditions e.g. hard forks, state-machine
        breaking changes In these cases, the RevisionNumber is incremented so that
        height continues to be monitonically increasing even as the RevisionHeight
        gets reset
    ibc.core.channel.v1.Channel:
      type: object
      properties:
        state:
          title: current state of the channel end
          type: string
          description: |-
            State defines if a channel is in one of the following states:
            CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

             - STATE_UNINITIALIZED_UNSPECIFIED: Default State
             - STATE_INIT: A channel has just started the opening handshake.
             - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
             - STATE_OPEN: A channel has completed the handshake. Open channels are
            ready to send and receive packets.
             - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
            packets.
          default: STATE_UNINITIALIZED_UNSPECIFIED
          enum:
          - STATE_UNINITIALIZED_UNSPECIFIED
          - STATE_INIT
          - STATE_TRYOPEN
          - STATE_OPEN
          - STATE_CLOSED
        ordering:
          title: whether the channel is ordered or unordered
          type: string
          description: |-
            - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
             - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
            which they were sent.
             - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
          default: ORDER_NONE_UNSPECIFIED
          enum:
          - ORDER_NONE_UNSPECIFIED
          - ORDER_UNORDERED
          - ORDER_ORDERED
        counterparty:
          title: counterparty channel end
          type: object
          properties:
            port_id:
              type: string
              description: port on the counterparty chain which owns the other end
                of the channel.
            channel_id:
              title: channel end on the counterparty chain
              type: string
        connection_hops:
          title: |-
            list of connection identifiers, in order, along which packets sent on
            this channel will travel
          type: array
          items:
            type: string
        version:
          title: "opaque channel version, which is agreed upon during the handshake"
          type: string
      description: |-
        Channel defines pipeline for exactly-once packet delivery between specific
        modules on separate blockchains, which has at least one end capable of
        sending packets and one end capable of receiving packets.
    ibc.core.channel.v1.Counterparty:
      title: Counterparty defines a channel end counterparty
      type: object
      properties:
        port_id:
          type: string
          description: port on the counterparty chain which owns the other end of
            the channel.
        channel_id:
          title: channel end on the counterparty chain
          type: string
    ibc.core.channel.v1.MsgAcknowledgement:
      title: MsgAcknowledgement receives incoming IBC acknowledgement
      type: object
      properties:
        packet:
          title: Packet defines a type that carries data across different chains through
            IBC
          type: object
          properties:
            sequence:
              type: string
              description: |-
                number corresponds to the order of sends and receives, where a Packet
                with an earlier sequence number must be sent and received before a Packet
                with a later sequence number.
              format: uint64
            source_port:
              type: string
              description: identifies the port on the sending chain.
            source_channel:
              type: string
              description: identifies the channel end on the sending chain.
            destination_port:
              type: string
              description: identifies the port on the receiving chain.
            destination_channel:
              type: string
              description: identifies the channel end on the receiving chain.
            data:
              title: actual opaque bytes transferred directly to the application module
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            timeout_height:
              title: block height after which the packet times out
              type: object
              properties:
                revision_number:
                  title: the revision that the client is currently on
                  type: string
                  format: uint64
                revision_height:
                  title: the height within the given revision
                  type: string
                  format: uint64
              description: |-
                Normally the RevisionHeight is incremented at each height while keeping
                RevisionNumber the same. However some consensus algorithms may choose to
                reset the height in certain conditions e.g. hard forks, state-machine
                breaking changes In these cases, the RevisionNumber is incremented so that
                height continues to be monitonically increasing even as the RevisionHeight
                gets reset
            timeout_timestamp:
              title: block timestamp (in nanoseconds) after which the packet times
                out
              type: string
              format: uint64
        acknowledgement:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_acked:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
    ibc.core.channel.v1.MsgAcknowledgementResponse:
      type: object
      properties:
        result:
          title: ResponseResultType defines the possible outcomes of the execution
            of a message
          type: string
          description: |-
            - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
             - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
             - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
          default: RESPONSE_RESULT_TYPE_UNSPECIFIED
          enum:
          - RESPONSE_RESULT_TYPE_UNSPECIFIED
          - RESPONSE_RESULT_TYPE_NOOP
          - RESPONSE_RESULT_TYPE_SUCCESS
      description: MsgAcknowledgementResponse defines the Msg/Acknowledgement response
        type.
    ibc.core.channel.v1.MsgChannelCloseConfirm:
      type: object
      properties:
        port_id:
          type: string
        channel_id:
          type: string
        proof_init:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
      description: |-
        MsgChannelCloseConfirm defines a msg sent by a Relayer to Chain B
        to acknowledge the change of channel state to CLOSED on Chain A.
    ibc.core.channel.v1.MsgChannelCloseConfirmResponse:
      type: object
      description: |-
        MsgChannelCloseConfirmResponse defines the Msg/ChannelCloseConfirm response
        type.
    ibc.core.channel.v1.MsgChannelCloseInit:
      type: object
      properties:
        port_id:
          type: string
        channel_id:
          type: string
        signer:
          type: string
      description: |-
        MsgChannelCloseInit defines a msg sent by a Relayer to Chain A
        to close a channel with Chain B.
    ibc.core.channel.v1.MsgChannelCloseInitResponse:
      type: object
      description: MsgChannelCloseInitResponse defines the Msg/ChannelCloseInit response
        type.
    ibc.core.channel.v1.MsgChannelOpenAck:
      type: object
      properties:
        port_id:
          type: string
        channel_id:
          type: string
        counterparty_channel_id:
          type: string
        counterparty_version:
          type: string
        proof_try:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
      description: |-
        MsgChannelOpenAck defines a msg sent by a Relayer to Chain A to acknowledge
        the change of channel state to TRYOPEN on Chain B.
    ibc.core.channel.v1.MsgChannelOpenAckResponse:
      type: object
      description: MsgChannelOpenAckResponse defines the Msg/ChannelOpenAck response
        type.
    ibc.core.channel.v1.MsgChannelOpenConfirm:
      type: object
      properties:
        port_id:
          type: string
        channel_id:
          type: string
        proof_ack:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
      description: |-
        MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to
        acknowledge the change of channel state to OPEN on Chain A.
    ibc.core.channel.v1.MsgChannelOpenConfirmResponse:
      type: object
      description: |-
        MsgChannelOpenConfirmResponse defines the Msg/ChannelOpenConfirm response
        type.
    ibc.core.channel.v1.MsgChannelOpenInit:
      type: object
      properties:
        port_id:
          type: string
        channel:
          type: object
          properties:
            state:
              title: current state of the channel end
              type: string
              description: |-
                State defines if a channel is in one of the following states:
                CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                 - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                 - STATE_INIT: A channel has just started the opening handshake.
                 - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                 - STATE_OPEN: A channel has completed the handshake. Open channels are
                ready to send and receive packets.
                 - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                packets.
              default: STATE_UNINITIALIZED_UNSPECIFIED
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
              - STATE_CLOSED
            ordering:
              title: whether the channel is ordered or unordered
              type: string
              description: |-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
              default: ORDER_NONE_UNSPECIFIED
              enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
            counterparty:
              title: counterparty channel end
              type: object
              properties:
                port_id:
                  type: string
                  description: port on the counterparty chain which owns the other
                    end of the channel.
                channel_id:
                  title: channel end on the counterparty chain
                  type: string
            connection_hops:
              title: |-
                list of connection identifiers, in order, along which packets sent on
                this channel will travel
              type: array
              items:
                type: string
            version:
              title: "opaque channel version, which is agreed upon during the handshake"
              type: string
          description: |-
            Channel defines pipeline for exactly-once packet delivery between specific
            modules on separate blockchains, which has at least one end capable of
            sending packets and one end capable of receiving packets.
        signer:
          type: string
      description: |-
        MsgChannelOpenInit defines an sdk.Msg to initialize a channel handshake. It
        is called by a relayer on Chain A.
    ibc.core.channel.v1.MsgChannelOpenInitResponse:
      type: object
      properties:
        channel_id:
          type: string
        version:
          type: string
      description: MsgChannelOpenInitResponse defines the Msg/ChannelOpenInit response
        type.
    ibc.core.channel.v1.MsgChannelOpenTry:
      type: object
      properties:
        port_id:
          type: string
        previous_channel_id:
          type: string
          description: "Deprecated: this field is unused. Crossing hello's are no\
            \ longer supported in core IBC."
        channel:
          type: object
          properties:
            state:
              title: current state of the channel end
              type: string
              description: |-
                State defines if a channel is in one of the following states:
                CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

                 - STATE_UNINITIALIZED_UNSPECIFIED: Default State
                 - STATE_INIT: A channel has just started the opening handshake.
                 - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
                 - STATE_OPEN: A channel has completed the handshake. Open channels are
                ready to send and receive packets.
                 - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
                packets.
              default: STATE_UNINITIALIZED_UNSPECIFIED
              enum:
              - STATE_UNINITIALIZED_UNSPECIFIED
              - STATE_INIT
              - STATE_TRYOPEN
              - STATE_OPEN
              - STATE_CLOSED
            ordering:
              title: whether the channel is ordered or unordered
              type: string
              description: |-
                - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
                 - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
                which they were sent.
                 - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
              default: ORDER_NONE_UNSPECIFIED
              enum:
              - ORDER_NONE_UNSPECIFIED
              - ORDER_UNORDERED
              - ORDER_ORDERED
            counterparty:
              title: counterparty channel end
              type: object
              properties:
                port_id:
                  type: string
                  description: port on the counterparty chain which owns the other
                    end of the channel.
                channel_id:
                  title: channel end on the counterparty chain
                  type: string
            connection_hops:
              title: |-
                list of connection identifiers, in order, along which packets sent on
                this channel will travel
              type: array
              items:
                type: string
            version:
              title: "opaque channel version, which is agreed upon during the handshake"
              type: string
          description: |-
            Channel defines pipeline for exactly-once packet delivery between specific
            modules on separate blockchains, which has at least one end capable of
            sending packets and one end capable of receiving packets.
        counterparty_version:
          type: string
        proof_init:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
      description: |-
        MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel
        on Chain B. The version field within the Channel field has been deprecated. Its
        value will be ignored by core IBC.
    ibc.core.channel.v1.MsgChannelOpenTryResponse:
      type: object
      properties:
        version:
          type: string
        channel_id:
          type: string
      description: MsgChannelOpenTryResponse defines the Msg/ChannelOpenTry response
        type.
    ibc.core.channel.v1.MsgRecvPacket:
      title: MsgRecvPacket receives incoming IBC packet
      type: object
      properties:
        packet:
          title: Packet defines a type that carries data across different chains through
            IBC
          type: object
          properties:
            sequence:
              type: string
              description: |-
                number corresponds to the order of sends and receives, where a Packet
                with an earlier sequence number must be sent and received before a Packet
                with a later sequence number.
              format: uint64
            source_port:
              type: string
              description: identifies the port on the sending chain.
            source_channel:
              type: string
              description: identifies the channel end on the sending chain.
            destination_port:
              type: string
              description: identifies the port on the receiving chain.
            destination_channel:
              type: string
              description: identifies the channel end on the receiving chain.
            data:
              title: actual opaque bytes transferred directly to the application module
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            timeout_height:
              title: block height after which the packet times out
              type: object
              properties:
                revision_number:
                  title: the revision that the client is currently on
                  type: string
                  format: uint64
                revision_height:
                  title: the height within the given revision
                  type: string
                  format: uint64
              description: |-
                Normally the RevisionHeight is incremented at each height while keeping
                RevisionNumber the same. However some consensus algorithms may choose to
                reset the height in certain conditions e.g. hard forks, state-machine
                breaking changes In these cases, the RevisionNumber is incremented so that
                height continues to be monitonically increasing even as the RevisionHeight
                gets reset
            timeout_timestamp:
              title: block timestamp (in nanoseconds) after which the packet times
                out
              type: string
              format: uint64
        proof_commitment:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
    ibc.core.channel.v1.MsgRecvPacketResponse:
      type: object
      properties:
        result:
          title: ResponseResultType defines the possible outcomes of the execution
            of a message
          type: string
          description: |-
            - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
             - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
             - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
          default: RESPONSE_RESULT_TYPE_UNSPECIFIED
          enum:
          - RESPONSE_RESULT_TYPE_UNSPECIFIED
          - RESPONSE_RESULT_TYPE_NOOP
          - RESPONSE_RESULT_TYPE_SUCCESS
      description: MsgRecvPacketResponse defines the Msg/RecvPacket response type.
    ibc.core.channel.v1.MsgTimeout:
      title: MsgTimeout receives timed-out packet
      type: object
      properties:
        packet:
          title: Packet defines a type that carries data across different chains through
            IBC
          type: object
          properties:
            sequence:
              type: string
              description: |-
                number corresponds to the order of sends and receives, where a Packet
                with an earlier sequence number must be sent and received before a Packet
                with a later sequence number.
              format: uint64
            source_port:
              type: string
              description: identifies the port on the sending chain.
            source_channel:
              type: string
              description: identifies the channel end on the sending chain.
            destination_port:
              type: string
              description: identifies the port on the receiving chain.
            destination_channel:
              type: string
              description: identifies the channel end on the receiving chain.
            data:
              title: actual opaque bytes transferred directly to the application module
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            timeout_height:
              title: block height after which the packet times out
              type: object
              properties:
                revision_number:
                  title: the revision that the client is currently on
                  type: string
                  format: uint64
                revision_height:
                  title: the height within the given revision
                  type: string
                  format: uint64
              description: |-
                Normally the RevisionHeight is incremented at each height while keeping
                RevisionNumber the same. However some consensus algorithms may choose to
                reset the height in certain conditions e.g. hard forks, state-machine
                breaking changes In these cases, the RevisionNumber is incremented so that
                height continues to be monitonically increasing even as the RevisionHeight
                gets reset
            timeout_timestamp:
              title: block timestamp (in nanoseconds) after which the packet times
                out
              type: string
              format: uint64
        proof_unreceived:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        next_sequence_recv:
          type: string
          format: uint64
        signer:
          type: string
    ibc.core.channel.v1.MsgTimeoutOnClose:
      type: object
      properties:
        packet:
          title: Packet defines a type that carries data across different chains through
            IBC
          type: object
          properties:
            sequence:
              type: string
              description: |-
                number corresponds to the order of sends and receives, where a Packet
                with an earlier sequence number must be sent and received before a Packet
                with a later sequence number.
              format: uint64
            source_port:
              type: string
              description: identifies the port on the sending chain.
            source_channel:
              type: string
              description: identifies the channel end on the sending chain.
            destination_port:
              type: string
              description: identifies the port on the receiving chain.
            destination_channel:
              type: string
              description: identifies the channel end on the receiving chain.
            data:
              title: actual opaque bytes transferred directly to the application module
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
            timeout_height:
              title: block height after which the packet times out
              type: object
              properties:
                revision_number:
                  title: the revision that the client is currently on
                  type: string
                  format: uint64
                revision_height:
                  title: the height within the given revision
                  type: string
                  format: uint64
              description: |-
                Normally the RevisionHeight is incremented at each height while keeping
                RevisionNumber the same. However some consensus algorithms may choose to
                reset the height in certain conditions e.g. hard forks, state-machine
                breaking changes In these cases, the RevisionNumber is incremented so that
                height continues to be monitonically increasing even as the RevisionHeight
                gets reset
            timeout_timestamp:
              title: block timestamp (in nanoseconds) after which the packet times
                out
              type: string
              format: uint64
        proof_unreceived:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_close:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        next_sequence_recv:
          type: string
          format: uint64
        signer:
          type: string
      description: MsgTimeoutOnClose timed-out packet upon counterparty channel closure.
    ibc.core.channel.v1.MsgTimeoutOnCloseResponse:
      type: object
      properties:
        result:
          title: ResponseResultType defines the possible outcomes of the execution
            of a message
          type: string
          description: |-
            - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
             - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
             - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
          default: RESPONSE_RESULT_TYPE_UNSPECIFIED
          enum:
          - RESPONSE_RESULT_TYPE_UNSPECIFIED
          - RESPONSE_RESULT_TYPE_NOOP
          - RESPONSE_RESULT_TYPE_SUCCESS
      description: MsgTimeoutOnCloseResponse defines the Msg/TimeoutOnClose response
        type.
    ibc.core.channel.v1.MsgTimeoutResponse:
      type: object
      properties:
        result:
          title: ResponseResultType defines the possible outcomes of the execution
            of a message
          type: string
          description: |-
            - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
             - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
             - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
          default: RESPONSE_RESULT_TYPE_UNSPECIFIED
          enum:
          - RESPONSE_RESULT_TYPE_UNSPECIFIED
          - RESPONSE_RESULT_TYPE_NOOP
          - RESPONSE_RESULT_TYPE_SUCCESS
      description: MsgTimeoutResponse defines the Msg/Timeout response type.
    ibc.core.channel.v1.Order:
      title: Order defines if a channel is ORDERED or UNORDERED
      type: string
      description: |-
        - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering
         - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in
        which they were sent.
         - ORDER_ORDERED: packets are delivered exactly in the order which they were sent
      default: ORDER_NONE_UNSPECIFIED
      enum:
      - ORDER_NONE_UNSPECIFIED
      - ORDER_UNORDERED
      - ORDER_ORDERED
    ibc.core.channel.v1.Packet:
      title: Packet defines a type that carries data across different chains through
        IBC
      type: object
      properties:
        sequence:
          type: string
          description: |-
            number corresponds to the order of sends and receives, where a Packet
            with an earlier sequence number must be sent and received before a Packet
            with a later sequence number.
          format: uint64
        source_port:
          type: string
          description: identifies the port on the sending chain.
        source_channel:
          type: string
          description: identifies the channel end on the sending chain.
        destination_port:
          type: string
          description: identifies the port on the receiving chain.
        destination_channel:
          type: string
          description: identifies the channel end on the receiving chain.
        data:
          title: actual opaque bytes transferred directly to the application module
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        timeout_height:
          title: block height after which the packet times out
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        timeout_timestamp:
          title: block timestamp (in nanoseconds) after which the packet times out
          type: string
          format: uint64
    ibc.core.channel.v1.ResponseResultType:
      title: ResponseResultType defines the possible outcomes of the execution of
        a message
      type: string
      description: |-
        - RESPONSE_RESULT_TYPE_UNSPECIFIED: Default zero value enumeration
         - RESPONSE_RESULT_TYPE_NOOP: The message did not call the IBC application callbacks (because, for example, the packet had already been relayed)
         - RESPONSE_RESULT_TYPE_SUCCESS: The message was executed successfully
      default: RESPONSE_RESULT_TYPE_UNSPECIFIED
      enum:
      - RESPONSE_RESULT_TYPE_UNSPECIFIED
      - RESPONSE_RESULT_TYPE_NOOP
      - RESPONSE_RESULT_TYPE_SUCCESS
    ibc.core.channel.v1.State:
      type: string
      description: |-
        State defines if a channel is in one of the following states:
        CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.

         - STATE_UNINITIALIZED_UNSPECIFIED: Default State
         - STATE_INIT: A channel has just started the opening handshake.
         - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.
         - STATE_OPEN: A channel has completed the handshake. Open channels are
        ready to send and receive packets.
         - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive
        packets.
      default: STATE_UNINITIALIZED_UNSPECIFIED
      enum:
      - STATE_UNINITIALIZED_UNSPECIFIED
      - STATE_INIT
      - STATE_TRYOPEN
      - STATE_OPEN
      - STATE_CLOSED
    cosmos.upgrade.v1beta1.Plan:
      type: object
      properties:
        name:
          type: string
          description: |-
            Sets the name for the upgrade. This name will be used by the upgraded
            version of the software to apply any special "on-upgrade" commands during
            the first BeginBlock method after the upgrade is applied. It is also used
            to detect whether a software version can handle a given upgrade. If no
            upgrade handler with this name has been set in the software, it will be
            assumed that the software is out-of-date when the upgrade Time or Height is
            reached and the software will exit.
        time:
          type: string
          description: |-
            Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
            has been removed from the SDK.
            If this field is not empty, an error will be thrown.
          format: date-time
        height:
          type: string
          description: The height at which the upgrade must be performed.
          format: int64
        info:
          title: |-
            Any application specific upgrade info to be included on-chain
            such as a git commit that validators could automatically upgrade to
          type: string
        upgraded_client_state:
          type: object
          additionalProperties:
            type: object
          description: |-
            Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
            moved to the IBC module in the sub module 02-client.
            If this field is not empty, an error will be thrown.
      description: Plan specifies information about a planned upgrade and when it
        should occur.
    ibc.core.client.v1.MsgCreateClient:
      title: MsgCreateClient defines a message to create an IBC client
      type: object
      properties:
        client_state:
          title: light client state
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        consensus_state:
          type: object
          additionalProperties:
            type: object
          description: |-
            consensus state associated with the client that corresponds to a given
            height.
        signer:
          title: signer address
          type: string
    ibc.core.client.v1.MsgCreateClientResponse:
      type: object
      description: MsgCreateClientResponse defines the Msg/CreateClient response type.
    ibc.core.client.v1.MsgIBCSoftwareUpgrade:
      title: MsgIBCSoftwareUpgrade defines the message used to schedule an upgrade
        of an IBC client using a v1 governance proposal
      type: object
      properties:
        plan:
          type: object
          properties:
            name:
              type: string
              description: |-
                Sets the name for the upgrade. This name will be used by the upgraded
                version of the software to apply any special "on-upgrade" commands during
                the first BeginBlock method after the upgrade is applied. It is also used
                to detect whether a software version can handle a given upgrade. If no
                upgrade handler with this name has been set in the software, it will be
                assumed that the software is out-of-date when the upgrade Time or Height is
                reached and the software will exit.
            time:
              type: string
              description: |-
                Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
                has been removed from the SDK.
                If this field is not empty, an error will be thrown.
              format: date-time
            height:
              type: string
              description: The height at which the upgrade must be performed.
              format: int64
            info:
              title: |-
                Any application specific upgrade info to be included on-chain
                such as a git commit that validators could automatically upgrade to
              type: string
            upgraded_client_state:
              type: object
              additionalProperties:
                type: object
              description: |-
                Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
                moved to the IBC module in the sub module 02-client.
                If this field is not empty, an error will be thrown.
          description: Plan specifies information about a planned upgrade and when
            it should occur.
        upgraded_client_state:
          type: object
          additionalProperties:
            type: object
          description: |-
            An UpgradedClientState must be provided to perform an IBC breaking upgrade.
            This will make the chain commit to the correct upgraded (self) client state
            before the upgrade occurs, so that connecting chains can verify that the
            new upgraded client is valid by verifying a proof on the previous version
            of the chain. This will allow IBC connections to persist smoothly across
            planned chain upgrades. Correspondingly, the UpgradedClientState field has been
            deprecated in the Cosmos SDK to allow for this logic to exist solely in
            the 02-client module.
        signer:
          title: signer address
          type: string
    ibc.core.client.v1.MsgIBCSoftwareUpgradeResponse:
      type: object
      description: MsgIBCSoftwareUpgradeResponse defines the Msg/IBCSoftwareUpgrade
        response type.
    ibc.core.client.v1.MsgRecoverClient:
      type: object
      properties:
        subject_client_id:
          title: the client identifier for the client to be updated if the proposal
            passes
          type: string
        substitute_client_id:
          title: |-
            the substitute client identifier for the client which will replace the subject
            client
          type: string
        signer:
          title: signer address
          type: string
      description: MsgRecoverClient defines the message used to recover a frozen or
        expired client.
    ibc.core.client.v1.MsgRecoverClientResponse:
      type: object
      description: MsgRecoverClientResponse defines the Msg/RecoverClient response
        type.
    ibc.core.client.v1.MsgSubmitMisbehaviour:
      type: object
      properties:
        client_id:
          title: client unique identifier
          type: string
        misbehaviour:
          title: misbehaviour used for freezing the light client
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        signer:
          title: signer address
          type: string
      description: |-
        MsgSubmitMisbehaviour defines an sdk.Msg type that submits Evidence for
        light client misbehaviour.
        This message has been deprecated. Use MsgUpdateClient instead.
    ibc.core.client.v1.MsgSubmitMisbehaviourResponse:
      type: object
      description: |-
        MsgSubmitMisbehaviourResponse defines the Msg/SubmitMisbehaviour response
        type.
    ibc.core.client.v1.MsgUpdateClient:
      type: object
      properties:
        client_id:
          title: client unique identifier
          type: string
        client_message:
          title: client message to update the light client
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        signer:
          title: signer address
          type: string
      description: |-
        MsgUpdateClient defines an sdk.Msg to update a IBC client state using
        the given client message.
    ibc.core.client.v1.MsgUpdateClientResponse:
      type: object
      description: MsgUpdateClientResponse defines the Msg/UpdateClient response type.
    ibc.core.client.v1.MsgUpdateParams:
      type: object
      properties:
        signer:
          title: signer address
          type: string
        params:
          type: object
          properties:
            allowed_clients:
              type: array
              description: |-
                allowed_clients defines the list of allowed client state types which can be created
                and interacted with. If a client type is removed from the allowed clients list, usage
                of this client will be disabled until it is added again to the list.
              items:
                type: string
          description: |-
            params defines the client parameters to update.

            NOTE: All parameters must be supplied.
      description: MsgUpdateParams defines the sdk.Msg type to update the client parameters.
    ibc.core.client.v1.MsgUpdateParamsResponse:
      type: object
      description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
    ibc.core.client.v1.MsgUpgradeClient:
      title: |-
        MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client
        state
      type: object
      properties:
        client_id:
          title: client unique identifier
          type: string
        client_state:
          title: upgraded client state
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        consensus_state:
          title: |-
            upgraded consensus state, only contains enough information to serve as a
            basis of trust in update logic
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        proof_upgrade_client:
          title: proof that old chain committed to new client
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_upgrade_consensus_state:
          title: proof that old chain committed to new consensus state
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        signer:
          title: signer address
          type: string
    ibc.core.client.v1.MsgUpgradeClientResponse:
      type: object
      description: MsgUpgradeClientResponse defines the Msg/UpgradeClient response
        type.
    ibc.core.client.v1.Params:
      type: object
      properties:
        allowed_clients:
          type: array
          description: |-
            allowed_clients defines the list of allowed client state types which can be created
            and interacted with. If a client type is removed from the allowed clients list, usage
            of this client will be disabled until it is added again to the list.
          items:
            type: string
      description: Params defines the set of IBC light client parameters.
    ibc.core.commitment.v1.MerklePrefix:
      title: |-
        MerklePrefix is merkle path prefixed to the key.
        The constructed key from the Path and the key will be append(Path.KeyPath,
        append(Path.KeyPrefix, key...))
      type: object
      properties:
        key_prefix:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    ibc.core.connection.v1.Counterparty:
      type: object
      properties:
        client_id:
          type: string
          description: |-
            identifies the client on the counterparty chain associated with a given
            connection.
        connection_id:
          type: string
          description: |-
            identifies the connection end on the counterparty chain associated with a
            given connection.
        prefix:
          title: |-
            MerklePrefix is merkle path prefixed to the key.
            The constructed key from the Path and the key will be append(Path.KeyPath,
            append(Path.KeyPrefix, key...))
          type: object
          properties:
            key_prefix:
              pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              type: string
              format: byte
          description: commitment merkle prefix of the counterparty chain.
      description: Counterparty defines the counterparty chain associated with a connection
        end.
    ibc.core.connection.v1.MsgConnectionOpenAck:
      type: object
      properties:
        connection_id:
          type: string
        counterparty_connection_id:
          type: string
        version:
          type: object
          properties:
            identifier:
              title: unique version identifier
              type: string
            features:
              title: list of features compatible with the specified identifier
              type: array
              items:
                type: string
          description: |-
            Version defines the versioning scheme used to negotiate the IBC verison in
            the connection handshake.
        client_state:
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        proof_try:
          title: |-
            proof of the initialization the connection on Chain B: `UNITIALIZED ->
            TRYOPEN`
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_client:
          title: proof of client state included in message
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_consensus:
          title: proof of client consensus state
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        consensus_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
        host_consensus_state_proof:
          title: optional proof data for host state machines that are unable to introspect
            their own consensus state
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
        acknowledge the change of connection state to TRYOPEN on Chain B.
    ibc.core.connection.v1.MsgConnectionOpenAckResponse:
      type: object
      description: MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck
        response type.
    ibc.core.connection.v1.MsgConnectionOpenConfirm:
      type: object
      properties:
        connection_id:
          type: string
        proof_ack:
          title: "proof for the change of the connection state on Chain A: `INIT ->\
            \ OPEN`"
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
      description: |-
        MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
        acknowledge the change of connection state to OPEN on Chain A.
    ibc.core.connection.v1.MsgConnectionOpenConfirmResponse:
      type: object
      description: |-
        MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm
        response type.
    ibc.core.connection.v1.MsgConnectionOpenInit:
      type: object
      properties:
        client_id:
          type: string
        counterparty:
          type: object
          properties:
            client_id:
              type: string
              description: |-
                identifies the client on the counterparty chain associated with a given
                connection.
            connection_id:
              type: string
              description: |-
                identifies the connection end on the counterparty chain associated with a
                given connection.
            prefix:
              title: |-
                MerklePrefix is merkle path prefixed to the key.
                The constructed key from the Path and the key will be append(Path.KeyPath,
                append(Path.KeyPrefix, key...))
              type: object
              properties:
                key_prefix:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: commitment merkle prefix of the counterparty chain.
          description: Counterparty defines the counterparty chain associated with
            a connection end.
        version:
          type: object
          properties:
            identifier:
              title: unique version identifier
              type: string
            features:
              title: list of features compatible with the specified identifier
              type: array
              items:
                type: string
          description: |-
            Version defines the versioning scheme used to negotiate the IBC verison in
            the connection handshake.
        delay_period:
          type: string
          format: uint64
        signer:
          type: string
      description: |-
        MsgConnectionOpenInit defines the msg sent by an account on Chain A to
        initialize a connection with Chain B.
    ibc.core.connection.v1.MsgConnectionOpenInitResponse:
      type: object
      description: |-
        MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response
        type.
    ibc.core.connection.v1.MsgConnectionOpenTry:
      type: object
      properties:
        client_id:
          type: string
        previous_connection_id:
          type: string
          description: "Deprecated: this field is unused. Crossing hellos are no longer\
            \ supported in core IBC."
        client_state:
          type: object
          additionalProperties:
            type: object
          description: |-
            `Any` contains an arbitrary serialized protocol buffer message along with a
            URL that describes the type of the serialized message.

            Protobuf library provides support to pack/unpack Any values in the form
            of utility functions or additional generated methods of the Any type.

            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }
                // or ...
                if (any.isSameTypeAs(Foo.getDefaultInstance())) {
                  foo = any.unpack(Foo.getDefaultInstance());
                }

            Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

            Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := anypb.New(foo)
                 if err != nil {
                   ...
                 }
                 ...
                 foo := &pb.Foo{}
                 if err := any.UnmarshalTo(foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use
            'type.googleapis.com/full.type.name' as the type URL and the unpack
            methods only use the fully qualified type name after the last '/'
            in the type URL, for example "foo.bar.com/x/y.z" will yield type
            name "y.z".

            JSON

            The JSON representation of an `Any` value uses the regular
            representation of the deserialized, embedded message, with an
            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON
            representation, that representation will be embedded adding a field
            `value` which holds the custom JSON in addition to the `@type`
            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        counterparty:
          type: object
          properties:
            client_id:
              type: string
              description: |-
                identifies the client on the counterparty chain associated with a given
                connection.
            connection_id:
              type: string
              description: |-
                identifies the connection end on the counterparty chain associated with a
                given connection.
            prefix:
              title: |-
                MerklePrefix is merkle path prefixed to the key.
                The constructed key from the Path and the key will be append(Path.KeyPath,
                append(Path.KeyPrefix, key...))
              type: object
              properties:
                key_prefix:
                  pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
                  type: string
                  format: byte
              description: commitment merkle prefix of the counterparty chain.
          description: Counterparty defines the counterparty chain associated with
            a connection end.
        delay_period:
          type: string
          format: uint64
        counterparty_versions:
          type: array
          items:
            type: object
            properties:
              identifier:
                title: unique version identifier
                type: string
              features:
                title: list of features compatible with the specified identifier
                type: array
                items:
                  type: string
            description: |-
              Version defines the versioning scheme used to negotiate the IBC verison in
              the connection handshake.
        proof_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        proof_init:
          title: |-
            proof of the initialization the connection on Chain A: `UNITIALIZED ->
            INIT`
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_client:
          title: proof of client state included in message
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof_consensus:
          title: proof of client consensus state
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        consensus_height:
          title: |-
            Height is a monotonically increasing data type
            that can be compared against another Height for the purposes of updating and
            freezing clients
          type: object
          properties:
            revision_number:
              title: the revision that the client is currently on
              type: string
              format: uint64
            revision_height:
              title: the height within the given revision
              type: string
              format: uint64
          description: |-
            Normally the RevisionHeight is incremented at each height while keeping
            RevisionNumber the same. However some consensus algorithms may choose to
            reset the height in certain conditions e.g. hard forks, state-machine
            breaking changes In these cases, the RevisionNumber is incremented so that
            height continues to be monitonically increasing even as the RevisionHeight
            gets reset
        signer:
          type: string
        host_consensus_state_proof:
          title: optional proof data for host state machines that are unable to introspect
            their own consensus state
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
      description: |-
        MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
        connection on Chain B.
    ibc.core.connection.v1.MsgConnectionOpenTryResponse:
      type: object
      description: MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry
        response type.
    ibc.core.connection.v1.MsgUpdateParams:
      type: object
      properties:
        signer:
          title: signer address
          type: string
        params:
          type: object
          properties:
            max_expected_time_per_block:
              type: string
              description: |-
                maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
                largest amount of time that the chain might reasonably take to produce the next block under normal operating
                conditions. A safe choice is 3-5x the expected time per block.
              format: uint64
          description: |-
            params defines the connection parameters to update.

            NOTE: All parameters must be supplied.
      description: MsgUpdateParams defines the sdk.Msg type to update the connection
        parameters.
    ibc.core.connection.v1.MsgUpdateParamsResponse:
      type: object
      description: MsgUpdateParamsResponse defines the MsgUpdateParams response type.
    ibc.core.connection.v1.Params:
      type: object
      properties:
        max_expected_time_per_block:
          type: string
          description: |-
            maximum expected time per block (in nanoseconds), used to enforce block delay. This parameter should reflect the
            largest amount of time that the chain might reasonably take to produce the next block under normal operating
            conditions. A safe choice is 3-5x the expected time per block.
          format: uint64
      description: Params defines the set of Connection parameters.
    ibc.core.connection.v1.Version:
      type: object
      properties:
        identifier:
          title: unique version identifier
          type: string
        features:
          title: list of features compatible with the specified identifier
          type: array
          items:
            type: string
      description: |-
        Version defines the versioning scheme used to negotiate the IBC verison in
        the connection handshake.
    sourcehub.acp.AccessDecision:
      title: AccessDecision models the result of evaluating a set of AccessRequests
        for an Actor
      type: object
      properties:
        id:
          type: string
        policy_id:
          title: used as part of id generation
          type: string
        creator:
          title: used as part of id generation
          type: string
        creator_acc_sequence:
          title: used as part of id generation
          type: string
          format: uint64
        operations:
          title: used as part of id generation
          type: array
          items:
            type: object
            properties:
              object:
                title: target object for operation
                type: object
                properties:
                  resource:
                    type: string
                  id:
                    type: string
                description: Object represents an entity which must be access controlled
                  within a Policy.
              permission:
                title: permission required to perform operation
                type: string
            description: Operation represents an action over an object.
        actor_did:
          title: used as part of id generation
          type: string
        actor:
          title: used as part of id generation
          type: string
        params:
          title: used as part of id generation
          type: object
          properties:
            decision_expiration_delta:
              title: number of blocks a Decision is valid for
              type: string
              format: uint64
            proof_expiration_delta:
              title: number of blocks a DecisionProof is valid for
              type: string
              format: uint64
            ticket_expiration_delta:
              title: number of blocks an AccessTicket is valid for
              type: string
              format: uint64
        creation_time:
          type: string
          format: date-time
        issued_height:
          title: issued_height stores the block height when the Decision was evaluated
          type: string
          format: uint64
    sourcehub.acp.AccessRequest:
      title: AccessRequest represents the wish to perform a set of operations by an
        actor
      type: object
      properties:
        operations:
          type: array
          items:
            type: object
            properties:
              object:
                title: target object for operation
                type: object
                properties:
                  resource:
                    type: string
                  id:
                    type: string
                description: Object represents an entity which must be access controlled
                  within a Policy.
              permission:
                title: permission required to perform operation
                type: string
            description: Operation represents an action over an object.
        actor:
          title: actor requesting operations
          type: object
          properties:
            id:
              type: string
          description: Actor represents an entity which makes access requests to a
            Policy.
    sourcehub.acp.Actor:
      type: object
      properties:
        id:
          type: string
      description: Actor represents an entity which makes access requests to a Policy.
    sourcehub.acp.ActorResource:
      type: object
      properties:
        name:
          type: string
        doc:
          type: string
        relations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              doc:
                type: string
              manages:
                title: list of relations managed by the current relation
                type: array
                items:
                  type: string
              vr_types:
                title: value restriction types
                type: array
                items:
                  type: object
                  properties:
                    resource_name:
                      title: resource_name scopes permissible actors resource
                      type: string
                    relation_name:
                      title: relation_name scopes permissible actors relation
                      type: string
                  description: |-
                    Restriction models a specification which a Relationship's actor
                    should meet.
      description: ActorResource represents a special Resource which is reserved for
        Policy actors.
    sourcehub.acp.ActorSet:
      type: object
      properties:
        object:
          type: object
          properties:
            resource:
              type: string
            id:
              type: string
          description: Object represents an entity which must be access controlled
            within a Policy.
        relation:
          type: string
      description: |-
        ActorSet represents a set of Actors in a Policy.
        It is specified through an Object, Relation pair, which represents
        all actors which have a relationship with given obj-rel pair.
        This expansion is recursive.
    sourcehub.acp.AllActors:
      type: object
      description: |-
        AllActors models a special Relationship Subject which indicates
        that all Actors in the Policy are included.
    sourcehub.acp.DecisionParams:
      title: DecisionParams stores auxiliary information regarding the validity of
        a decision
      type: object
      properties:
        decision_expiration_delta:
          title: number of blocks a Decision is valid for
          type: string
          format: uint64
        proof_expiration_delta:
          title: number of blocks a DecisionProof is valid for
          type: string
          format: uint64
        ticket_expiration_delta:
          title: number of blocks an AccessTicket is valid for
          type: string
          format: uint64
    sourcehub.acp.MsgCheckAccess:
      type: object
      properties:
        creator:
          type: string
        policy_id:
          type: string
        creation_time:
          type: string
          format: date-time
        access_request:
          title: AccessRequest represents the wish to perform a set of operations
            by an actor
          type: object
          properties:
            operations:
              type: array
              items:
                type: object
                properties:
                  object:
                    title: target object for operation
                    type: object
                    properties:
                      resource:
                        type: string
                      id:
                        type: string
                    description: Object represents an entity which must be access
                      controlled within a Policy.
                  permission:
                    title: permission required to perform operation
                    type: string
                description: Operation represents an action over an object.
            actor:
              title: actor requesting operations
              type: object
              properties:
                id:
                  type: string
              description: Actor represents an entity which makes access requests
                to a Policy.
    sourcehub.acp.MsgCheckAccessResponse:
      type: object
      properties:
        decision:
          title: AccessDecision models the result of evaluating a set of AccessRequests
            for an Actor
          type: object
          properties:
            id:
              type: string
            policy_id:
              title: used as part of id generation
              type: string
            creator:
              title: used as part of id generation
              type: string
            creator_acc_sequence:
              title: used as part of id generation
              type: string
              format: uint64
            operations:
              title: used as part of id generation
              type: array
              items:
                type: object
                properties:
                  object:
                    title: target object for operation
                    type: object
                    properties:
                      resource:
                        type: string
                      id:
                        type: string
                    description: Object represents an entity which must be access
                      controlled within a Policy.
                  permission:
                    title: permission required to perform operation
                    type: string
                description: Operation represents an action over an object.
            actor_did:
              title: used as part of id generation
              type: string
            actor:
              title: used as part of id generation
              type: string
            params:
              title: used as part of id generation
              type: object
              properties:
                decision_expiration_delta:
                  title: number of blocks a Decision is valid for
                  type: string
                  format: uint64
                proof_expiration_delta:
                  title: number of blocks a DecisionProof is valid for
                  type: string
                  format: uint64
                ticket_expiration_delta:
                  title: number of blocks an AccessTicket is valid for
                  type: string
                  format: uint64
            creation_time:
              type: string
              format: date-time
            issued_height:
              title: issued_height stores the block height when the Decision was evaluated
              type: string
              format: uint64
    sourcehub.acp.MsgCreatePolicy:
      type: object
      properties:
        creator:
          type: string
        policy:
          type: string
        marshal_type:
          type: string
          description: |-
            PolicyEncodingType enumerates supported marshaling types for policies.

             - UNKNOWN: Fallback value for a missing Marshaling Type
             - SHORT_YAML: Policy Marshaled as a YAML Short Policy definition
             - SHORT_JSON: Policy Marshaled as a JSON Short Policy definition
          default: UNKNOWN
          enum:
          - UNKNOWN
          - SHORT_YAML
          - SHORT_JSON
        creation_time:
          type: string
          format: date-time
    sourcehub.acp.MsgCreatePolicyResponse:
      type: object
      properties:
        policy:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            description:
              type: string
            creation_time:
              type: string
              format: date-time
            attributes:
              type: object
              additionalProperties:
                type: string
            resources:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  doc:
                    type: string
                  permissions:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        doc:
                          type: string
                        expression:
                          type: string
                      description: |-
                        Permission models a special type of Relation which is evaluated at runtime.
                        A permission often maps to an operation defined for a resource which an actor may attempt.
                  relations:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        doc:
                          type: string
                        manages:
                          title: list of relations managed by the current relation
                          type: array
                          items:
                            type: string
                        vr_types:
                          title: value restriction types
                          type: array
                          items:
                            type: object
                            properties:
                              resource_name:
                                title: resource_name scopes permissible actors resource
                                type: string
                              relation_name:
                                title: relation_name scopes permissible actors relation
                                type: string
                            description: |-
                              Restriction models a specification which a Relationship's actor
                              should meet.
                description: |-
                  Resource models a namespace for objects in a Policy.
                  Appications will have multiple entities which they must manage such as files or groups.
                  A Resource represents a set of entities of a certain type.
            actor_resource:
              type: object
              properties:
                name:
                  type: string
                doc:
                  type: string
                relations:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      doc:
                        type: string
                      manages:
                        title: list of relations managed by the current relation
                        type: array
                        items:
                          type: string
                      vr_types:
                        title: value restriction types
                        type: array
                        items:
                          type: object
                          properties:
                            resource_name:
                              title: resource_name scopes permissible actors resource
                              type: string
                            relation_name:
                              title: relation_name scopes permissible actors relation
                              type: string
                          description: |-
                            Restriction models a specification which a Relationship's actor
                            should meet.
              description: ActorResource represents a special Resource which is reserved
                for Policy actors.
            creator:
              type: string
          description: |-
            Policy represents an ACP module Policy definition.
            Each Policy defines a set of high level rules over how the acces control system
            should behave.
    sourcehub.acp.MsgDeleteRelationship:
      type: object
      properties:
        creator:
          type: string
        policy_id:
          type: string
        relationship:
          type: object
          properties:
            object:
              type: object
              properties:
                resource:
                  type: string
                id:
                  type: string
              description: Object represents an entity which must be access controlled
                within a Policy.
            relation:
              type: string
            subject:
              type: object
              properties:
                actor:
                  type: object
                  properties:
                    id:
                      type: string
                  description: Actor represents an entity which makes access requests
                    to a Policy.
                actor_set:
                  type: object
                  properties:
                    object:
                      type: object
                      properties:
                        resource:
                          type: string
                        id:
                          type: string
                      description: Object represents an entity which must be access
                        controlled within a Policy.
                    relation:
                      type: string
                  description: |-
                    ActorSet represents a set of Actors in a Policy.
                    It is specified through an Object, Relation pair, which represents
                    all actors which have a relationship with given obj-rel pair.
                    This expansion is recursive.
                all_actors:
                  type: object
                  properties: {}
                  description: |-
                    AllActors models a special Relationship Subject which indicates
                    that all Actors in the Policy are included.
                object:
                  type: object
                  properties:
                    resource:
                      type: string
                    id:
                      type: string
                  description: Object represents an entity which must be access controlled
                    within a Policy.
              description: Subject specifies the target of a Relationship.
          description: |-
            Relationship models an access control rule.
            It states that the given subject has relation with object.
    sourcehub.acp.MsgDeleteRelationshipResponse:
      type: object
      properties:
        record_found:
          type: boolean
    sourcehub.acp.MsgRegisterObject:
      type: object
      properties:
        creator:
          type: string
        policy_id:
          type: string
        object:
          type: object
          properties:
            resource:
              type: string
            id:
              type: string
          description: Object represents an entity which must be access controlled
            within a Policy.
        creation_time:
          type: string
          format: date-time
    sourcehub.acp.MsgRegisterObjectResponse:
      type: object
      properties:
        result:
          title: RegistrationResult encodes the possible result set from Registering
            an Object
          type: string
          description: |-
            - NoOp: NoOp indicates no action was take. The operation failed or the Object already existed and was active
             - Registered: Registered indicates the Object was sucessfuly registered to the Actor.
             - Unarchived: Unarchived indicates that a previously deleted Object is active again.
            Only the original owners can Unarchive an object.
          default: NoOp
          enum:
          - NoOp
          - Registered
          - Unarchived
    sourcehub.acp.MsgSetRelationship:
      type: object
      properties:
        creator:
          type: string
        policy_id:
          type: string
        creation_time:
          type: string
          format: date-time
        relationship:
          type: object
          properties:
            object:
              type: object
              properties:
                resource:
                  type: string
                id:
                  type: string
              description: Object represents an entity which must be access controlled
                within a Policy.
            relation:
              type: string
            subject:
              type: object
              properties:
                actor:
                  type: object
                  properties:
                    id:
                      type: string
                  description: Actor represents an entity which makes access requests
                    to a Policy.
                actor_set:
                  type: object
                  properties:
                    object:
                      type: object
                      properties:
                        resource:
                          type: string
                        id:
                          type: string
                      description: Object represents an entity which must be access
                        controlled within a Policy.
                    relation:
                      type: string
                  description: |-
                    ActorSet represents a set of Actors in a Policy.
                    It is specified through an Object, Relation pair, which represents
                    all actors which have a relationship with given obj-rel pair.
                    This expansion is recursive.
                all_actors:
                  type: object
                  properties: {}
                  description: |-
                    AllActors models a special Relationship Subject which indicates
                    that all Actors in the Policy are included.
                object:
                  type: object
                  properties:
                    resource:
                      type: string
                    id:
                      type: string
                  description: Object represents an entity which must be access controlled
                    within a Policy.
              description: Subject specifies the target of a Relationship.
          description: |-
            Relationship models an access control rule.
            It states that the given subject has relation with object.
    sourcehub.acp.MsgSetRelationshipResponse:
      type: object
      properties:
        record_existed:
          title: "Indicates whether the given Relationship previously existed, ie\
            \ the Tx was a no op"
          type: boolean
    sourcehub.acp.MsgUnregisterObject:
      type: object
      properties:
        creator:
          type: string
        policy_id:
          type: string
        object:
          type: object
          properties:
            resource:
              type: string
            id:
              type: string
          description: Object represents an entity which must be access controlled
            within a Policy.
    sourcehub.acp.MsgUnregisterObjectResponse:
      type: object
      properties:
        found:
          type: boolean
    sourcehub.acp.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties: {}
          description: "NOTE: All parameters must be supplied."
      description: MsgUpdateParams is the Msg/UpdateParams request type.
    sourcehub.acp.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.
    sourcehub.acp.Object:
      type: object
      properties:
        resource:
          type: string
        id:
          type: string
      description: Object represents an entity which must be access controlled within
        a Policy.
    sourcehub.acp.Operation:
      type: object
      properties:
        object:
          title: target object for operation
          type: object
          properties:
            resource:
              type: string
            id:
              type: string
          description: Object represents an entity which must be access controlled
            within a Policy.
        permission:
          title: permission required to perform operation
          type: string
      description: Operation represents an action over an object.
    sourcehub.acp.Params:
      type: object
      description: Params defines the parameters for the module.
    sourcehub.acp.Permission:
      type: object
      properties:
        name:
          type: string
        doc:
          type: string
        expression:
          type: string
      description: |-
        Permission models a special type of Relation which is evaluated at runtime.
        A permission often maps to an operation defined for a resource which an actor may attempt.
    sourcehub.acp.Policy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        creation_time:
          type: string
          format: date-time
        attributes:
          type: object
          additionalProperties:
            type: string
        resources:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              doc:
                type: string
              permissions:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    doc:
                      type: string
                    expression:
                      type: string
                  description: |-
                    Permission models a special type of Relation which is evaluated at runtime.
                    A permission often maps to an operation defined for a resource which an actor may attempt.
              relations:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    doc:
                      type: string
                    manages:
                      title: list of relations managed by the current relation
                      type: array
                      items:
                        type: string
                    vr_types:
                      title: value restriction types
                      type: array
                      items:
                        type: object
                        properties:
                          resource_name:
                            title: resource_name scopes permissible actors resource
                            type: string
                          relation_name:
                            title: relation_name scopes permissible actors relation
                            type: string
                        description: |-
                          Restriction models a specification which a Relationship's actor
                          should meet.
            description: |-
              Resource models a namespace for objects in a Policy.
              Appications will have multiple entities which they must manage such as files or groups.
              A Resource represents a set of entities of a certain type.
        actor_resource:
          type: object
          properties:
            name:
              type: string
            doc:
              type: string
            relations:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  doc:
                    type: string
                  manages:
                    title: list of relations managed by the current relation
                    type: array
                    items:
                      type: string
                  vr_types:
                    title: value restriction types
                    type: array
                    items:
                      type: object
                      properties:
                        resource_name:
                          title: resource_name scopes permissible actors resource
                          type: string
                        relation_name:
                          title: relation_name scopes permissible actors relation
                          type: string
                      description: |-
                        Restriction models a specification which a Relationship's actor
                        should meet.
          description: ActorResource represents a special Resource which is reserved
            for Policy actors.
        creator:
          type: string
      description: |-
        Policy represents an ACP module Policy definition.
        Each Policy defines a set of high level rules over how the acces control system
        should behave.
    sourcehub.acp.PolicyMarshalingType:
      type: string
      description: |-
        PolicyEncodingType enumerates supported marshaling types for policies.

         - UNKNOWN: Fallback value for a missing Marshaling Type
         - SHORT_YAML: Policy Marshaled as a YAML Short Policy definition
         - SHORT_JSON: Policy Marshaled as a JSON Short Policy definition
      default: UNKNOWN
      enum:
      - UNKNOWN
      - SHORT_YAML
      - SHORT_JSON
    sourcehub.acp.RegistrationResult:
      title: RegistrationResult encodes the possible result set from Registering an
        Object
      type: string
      description: |-
        - NoOp: NoOp indicates no action was take. The operation failed or the Object already existed and was active
         - Registered: Registered indicates the Object was sucessfuly registered to the Actor.
         - Unarchived: Unarchived indicates that a previously deleted Object is active again.
        Only the original owners can Unarchive an object.
      default: NoOp
      enum:
      - NoOp
      - Registered
      - Unarchived
    sourcehub.acp.Relation:
      type: object
      properties:
        name:
          type: string
        doc:
          type: string
        manages:
          title: list of relations managed by the current relation
          type: array
          items:
            type: string
        vr_types:
          title: value restriction types
          type: array
          items:
            type: object
            properties:
              resource_name:
                title: resource_name scopes permissible actors resource
                type: string
              relation_name:
                title: relation_name scopes permissible actors relation
                type: string
            description: |-
              Restriction models a specification which a Relationship's actor
              should meet.
    sourcehub.acp.Relationship:
      type: object
      properties:
        object:
          type: object
          properties:
            resource:
              type: string
            id:
              type: string
          description: Object represents an entity which must be access controlled
            within a Policy.
        relation:
          type: string
        subject:
          type: object
          properties:
            actor:
              type: object
              properties:
                id:
                  type: string
              description: Actor represents an entity which makes access requests
                to a Policy.
            actor_set:
              type: object
              properties:
                object:
                  type: object
                  properties:
                    resource:
                      type: string
                    id:
                      type: string
                  description: Object represents an entity which must be access controlled
                    within a Policy.
                relation:
                  type: string
              description: |-
                ActorSet represents a set of Actors in a Policy.
                It is specified through an Object, Relation pair, which represents
                all actors which have a relationship with given obj-rel pair.
                This expansion is recursive.
            all_actors:
              type: object
              properties: {}
              description: |-
                AllActors models a special Relationship Subject which indicates
                that all Actors in the Policy are included.
            object:
              type: object
              properties:
                resource:
                  type: string
                id:
                  type: string
              description: Object represents an entity which must be access controlled
                within a Policy.
          description: Subject specifies the target of a Relationship.
      description: |-
        Relationship models an access control rule.
        It states that the given subject has relation with object.
    sourcehub.acp.Resource:
      type: object
      properties:
        name:
          type: string
        doc:
          type: string
        permissions:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              doc:
                type: string
              expression:
                type: string
            description: |-
              Permission models a special type of Relation which is evaluated at runtime.
              A permission often maps to an operation defined for a resource which an actor may attempt.
        relations:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              doc:
                type: string
              manages:
                title: list of relations managed by the current relation
                type: array
                items:
                  type: string
              vr_types:
                title: value restriction types
                type: array
                items:
                  type: object
                  properties:
                    resource_name:
                      title: resource_name scopes permissible actors resource
                      type: string
                    relation_name:
                      title: relation_name scopes permissible actors relation
                      type: string
                  description: |-
                    Restriction models a specification which a Relationship's actor
                    should meet.
      description: |-
        Resource models a namespace for objects in a Policy.
        Appications will have multiple entities which they must manage such as files or groups.
        A Resource represents a set of entities of a certain type.
    sourcehub.acp.Restriction:
      type: object
      properties:
        resource_name:
          title: resource_name scopes permissible actors resource
          type: string
        relation_name:
          title: relation_name scopes permissible actors relation
          type: string
      description: |-
        Restriction models a specification which a Relationship's actor
        should meet.
    sourcehub.acp.Subject:
      type: object
      properties:
        actor:
          type: object
          properties:
            id:
              type: string
          description: Actor represents an entity which makes access requests to a
            Policy.
        actor_set:
          type: object
          properties:
            object:
              type: object
              properties:
                resource:
                  type: string
                id:
                  type: string
              description: Object represents an entity which must be access controlled
                within a Policy.
            relation:
              type: string
          description: |-
            ActorSet represents a set of Actors in a Policy.
            It is specified through an Object, Relation pair, which represents
            all actors which have a relationship with given obj-rel pair.
            This expansion is recursive.
        all_actors:
          type: object
          properties: {}
          description: |-
            AllActors models a special Relationship Subject which indicates
            that all Actors in the Policy are included.
        object:
          type: object
          properties:
            resource:
              type: string
            id:
              type: string
          description: Object represents an entity which must be access controlled
            within a Policy.
      description: Subject specifies the target of a Relationship.
    sourcehub.bulletin.MsgCreatePost:
      type: object
      properties:
        creator:
          type: string
        namespace:
          type: string
        payload:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        proof:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
    sourcehub.bulletin.MsgCreatePostResponse:
      type: object
    sourcehub.bulletin.MsgUpdateParams:
      type: object
      properties:
        authority:
          type: string
          description: authority is the address that controls the module (defaults
            to x/gov unless overwritten).
        params:
          type: object
          properties: {}
          description: "NOTE: All parameters must be supplied."
      description: MsgUpdateParams is the Msg/UpdateParams request type.
    sourcehub.bulletin.MsgUpdateParamsResponse:
      type: object
      description: |-
        MsgUpdateParamsResponse defines the response structure for executing a
        MsgUpdateParams message.
    sourcehub.bulletin.Params:
      type: object
      description: Params defines the parameters for the module.
x-original-swagger-version: "2.0"
